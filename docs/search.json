[{"path":"https://ahaeusser.github.io/tscv/articles/vignette_02_cross_validation.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Time Series Cross Validation","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"ahaeusser/tscv\")"},{"path":"https://ahaeusser.github.io/tscv/articles/vignette_02_cross_validation.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Time Series Cross Validation","text":"","code":"# Load relevant packages library(tscv) #> Error in get(paste0(generic, \".\", class), envir = get_method_env()) :  #>   object 'type_sum.accel' not found library(tidyverse) library(tsibble) library(fable) library(feasts)"},{"path":"https://ahaeusser.github.io/tscv/articles/vignette_02_cross_validation.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"Time Series Cross Validation","text":"data set elec_price tibble day-ahead electricity spot prices [EUR/MWh] ENTSO-E Transparency Platform. data set contains hourly time series data 2019-01-01 2020-12-31 8 European bidding zones (BZN): DE: Germany (including Luxembourg) DK: Denmark ES: Spain FI: Finland FR: France NL: Netherlands NO1: Norway 1 (Oslo) SE1: Sweden 1 (Lulea) vignette, use four time series demonstrate functionality package (data set filtered bidding zones Germany, France, Norway Sweden). can use function plot_line() visualize four time series. function summarise_data() used explore structure (start date, end date, number observations number missing zero values). function summarise_stats() calculates descriptive statistics time series.","code":"series_id = \"bidding_zone\" value_id = \"value\" index_id = \"time\"  context <- list(   series_id = series_id,   value_id = value_id,   index_id = index_id )  # Prepare data set main_frame <- elec_price %>%   filter(bidding_zone %in% c(\"DE\", \"FR\", \"NO1\", \"SE1\"))  main_frame #> # A tibble: 70,176 × 5 #>    time                item            unit      bidding_zone  value #>    <dttm>              <chr>           <chr>     <chr>         <dbl> #>  1 2019-01-01 00:00:00 Day-ahead Price [EUR/MWh] DE            10.1  #>  2 2019-01-01 01:00:00 Day-ahead Price [EUR/MWh] DE            -4.08 #>  3 2019-01-01 02:00:00 Day-ahead Price [EUR/MWh] DE            -9.91 #>  4 2019-01-01 03:00:00 Day-ahead Price [EUR/MWh] DE            -7.41 #>  5 2019-01-01 04:00:00 Day-ahead Price [EUR/MWh] DE           -12.6  #>  6 2019-01-01 05:00:00 Day-ahead Price [EUR/MWh] DE           -17.2  #>  7 2019-01-01 06:00:00 Day-ahead Price [EUR/MWh] DE           -15.1  #>  8 2019-01-01 07:00:00 Day-ahead Price [EUR/MWh] DE            -4.93 #>  9 2019-01-01 08:00:00 Day-ahead Price [EUR/MWh] DE            -6.33 #> 10 2019-01-01 09:00:00 Day-ahead Price [EUR/MWh] DE            -4.93 #> # ℹ 70,166 more rows  main_frame %>%   plot_line(     x = time,     y = value,     color = bidding_zone,     facet_var = bidding_zone,     title = \"Day-ahead Electricity Spot Price\",     subtitle = \"2019-01-01 to 2020-12-31\",     xlab = \"Time\",     ylab = \"[EUR/MWh]\",     caption = \"Data: ENTSO-E Transparency\"     ) summarise_data(   .data = main_frame,   context = context ) #> # A tibble: 4 × 8 #>   bidding_zone start               end                 n_obs n_missing #>   <chr>        <dttm>              <dttm>              <int>     <int> #> 1 DE           2019-01-01 00:00:00 2020-12-31 23:00:00 17544         0 #> 2 FR           2019-01-01 00:00:00 2020-12-31 23:00:00 17544         0 #> 3 NO1          2019-01-01 00:00:00 2020-12-31 23:00:00 17544         0 #> 4 SE1          2019-01-01 00:00:00 2020-12-31 23:00:00 17544         0 #> # ℹ 3 more variables: pct_missing <dbl>, n_zeros <int>, pct_zeros <dbl>  summarise_stats(   .data = main_frame,   context = context ) #> # A tibble: 4 × 11 #>   bidding_zone  mean median  mode    sd     p0   p25   p75  p100 skewness #>   <chr>        <dbl>  <dbl> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl>    <dbl> #> 1 DE            34.1   35.1 35.9   16.9 -90.0  26.3   43.8  200.   -0.776 #> 2 FR            35.8   36   37.2   15.5 -75.8  26.6   44.9  200.    0.323 #> 3 NO1           24.3   26.9  2.66  17.1  -1.73  6.95  38.8  109.    0.189 #> 4 SE1           26.1   27.9 37.9   15.9  -1.73 11.4   38.5  189.    0.378 #> # ℹ 1 more variable: kurtosis <dbl>"},{"path":"https://ahaeusser.github.io/tscv/articles/vignette_02_cross_validation.html","id":"split-data-into-training-and-testing","dir":"Articles","previous_headings":"","what":"Split data into training and testing","title":"Time Series Cross Validation","text":"prepare data set time series cross-validation (TSCV), can use function make_split(). function splits data several slices training testing (.e. partitioning time slices) time series cross-validation. can choose stretch slide. first expanding window approach, latter fixed window approach. Furthermore, define (initial) window size training testing via n_init n_ahead, well step size increments via n_skip. options splitting data available via type (see function reference details).","code":"# Setup for time series cross validation type = \"first\" value = 2400      # size for training window n_ahead = 24      # size for testing window (= forecast horizon) n_skip = 23       # skip 23 observations n_lag = 0         # no lag mode = \"slide\"    # fixed window approach exceed = FALSE    # only pseudo out-of-sample forecast  split_frame <- make_split(   main_frame = main_frame,   context = context,   type = type,   value = value,   n_ahead = n_ahead,   n_skip = n_skip,   n_lag = n_lag,   mode = mode,   exceed = exceed )  # For illustration, only the first 50 splits are used split_frame <- split_frame %>%   filter(split %in% c(1:50))  split_frame #> # A tibble: 200 × 4 #>    bidding_zone split train         test       #>    <chr>        <int> <list>        <list>     #>  1 DE               1 <int [2,400]> <int [24]> #>  2 DE               2 <int [2,400]> <int [24]> #>  3 DE               3 <int [2,400]> <int [24]> #>  4 DE               4 <int [2,400]> <int [24]> #>  5 DE               5 <int [2,400]> <int [24]> #>  6 DE               6 <int [2,400]> <int [24]> #>  7 DE               7 <int [2,400]> <int [24]> #>  8 DE               8 <int [2,400]> <int [24]> #>  9 DE               9 <int [2,400]> <int [24]> #> 10 DE              10 <int [2,400]> <int [24]> #> # ℹ 190 more rows"},{"path":"https://ahaeusser.github.io/tscv/articles/vignette_02_cross_validation.html","id":"training-and-forecasting","dir":"Articles","previous_headings":"","what":"Training and forecasting","title":"Time Series Cross Validation","text":"training test splits prepared within split_frame ready forecasting. function slice_train() slices data main_frame according splits within split_frame. using forecasting methods packages fable fabletools, convert data set main_frame tibble tsibble. Due sample size computation time, simple benchmark methods used: SNAIVE: Seasonal naive model weekly seasonality (package fable) STL-NAIVE: STL-decomposition model naive forecast. series decomposed via STL seasonal adjusted series predicted via naive approach. Afterwards, seasonal component added forecasts (packages fable feasts) SNAIVE2: Variation seasonal naive approach. Mondays, Saturdays Sundays treated weekly lag. Tuesdays, Wednesdays, Thursdays Fridays treated daily lag. SMEDIAN: Seasonal median model functions SMEDIAN() SNAIVE2() extensions fable package","code":"# Slice training data from main_frame according to split_frame train_frame <- slice_train(   main_frame = main_frame,   split_frame = split_frame,   context = context   )  train_frame #> # A tibble: 480,000 × 6 #>    time                item            unit      bidding_zone  value split #>    <dttm>              <chr>           <chr>     <chr>         <dbl> <int> #>  1 2019-01-01 00:00:00 Day-ahead Price [EUR/MWh] DE            10.1      1 #>  2 2019-01-01 01:00:00 Day-ahead Price [EUR/MWh] DE            -4.08     1 #>  3 2019-01-01 02:00:00 Day-ahead Price [EUR/MWh] DE            -9.91     1 #>  4 2019-01-01 03:00:00 Day-ahead Price [EUR/MWh] DE            -7.41     1 #>  5 2019-01-01 04:00:00 Day-ahead Price [EUR/MWh] DE           -12.6      1 #>  6 2019-01-01 05:00:00 Day-ahead Price [EUR/MWh] DE           -17.2      1 #>  7 2019-01-01 06:00:00 Day-ahead Price [EUR/MWh] DE           -15.1      1 #>  8 2019-01-01 07:00:00 Day-ahead Price [EUR/MWh] DE            -4.93     1 #>  9 2019-01-01 08:00:00 Day-ahead Price [EUR/MWh] DE            -6.33     1 #> 10 2019-01-01 09:00:00 Day-ahead Price [EUR/MWh] DE            -4.93     1 #> # ℹ 479,990 more rows  # Convert tibble to tsibble train_frame <- train_frame %>%   as_tsibble(     index = time,     key = c(bidding_zone, split)     )  train_frame #> # A tsibble: 480,000 x 6 [1h] <UTC> #> # Key:       bidding_zone, split [200] #>    time                item            unit      bidding_zone  value split #>    <dttm>              <chr>           <chr>     <chr>         <dbl> <int> #>  1 2019-01-01 00:00:00 Day-ahead Price [EUR/MWh] DE            10.1      1 #>  2 2019-01-01 01:00:00 Day-ahead Price [EUR/MWh] DE            -4.08     1 #>  3 2019-01-01 02:00:00 Day-ahead Price [EUR/MWh] DE            -9.91     1 #>  4 2019-01-01 03:00:00 Day-ahead Price [EUR/MWh] DE            -7.41     1 #>  5 2019-01-01 04:00:00 Day-ahead Price [EUR/MWh] DE           -12.6      1 #>  6 2019-01-01 05:00:00 Day-ahead Price [EUR/MWh] DE           -17.2      1 #>  7 2019-01-01 06:00:00 Day-ahead Price [EUR/MWh] DE           -15.1      1 #>  8 2019-01-01 07:00:00 Day-ahead Price [EUR/MWh] DE            -4.93     1 #>  9 2019-01-01 08:00:00 Day-ahead Price [EUR/MWh] DE            -6.33     1 #> 10 2019-01-01 09:00:00 Day-ahead Price [EUR/MWh] DE            -4.93     1 #> # ℹ 479,990 more rows  # Model training via fabletools::model() model_frame <- train_frame %>%   model(     \"SNAIVE\" = SNAIVE(value ~ lag(\"week\")),     \"STL-NAIVE\" = decomposition_model(STL(value), NAIVE(season_adjust)),     \"SNAIVE2\" = SNAIVE2(value),     \"SMEDIAN\" = SMEDIAN(value ~ lag(\"week\"))     )  model_frame #> # A mable: 200 x 6 #> # Key:     bidding_zone, split [200] #>    bidding_zone split   SNAIVE               `STL-NAIVE`   SNAIVE2   SMEDIAN #>    <chr>        <int>  <model>                   <model>   <model>   <model> #>  1 DE               1 <SNAIVE> <STL decomposition model> <SNAIVE2> <SMEDIAN> #>  2 DE               2 <SNAIVE> <STL decomposition model> <SNAIVE2> <SMEDIAN> #>  3 DE               3 <SNAIVE> <STL decomposition model> <SNAIVE2> <SMEDIAN> #>  4 DE               4 <SNAIVE> <STL decomposition model> <SNAIVE2> <SMEDIAN> #>  5 DE               5 <SNAIVE> <STL decomposition model> <SNAIVE2> <SMEDIAN> #>  6 DE               6 <SNAIVE> <STL decomposition model> <SNAIVE2> <SMEDIAN> #>  7 DE               7 <SNAIVE> <STL decomposition model> <SNAIVE2> <SMEDIAN> #>  8 DE               8 <SNAIVE> <STL decomposition model> <SNAIVE2> <SMEDIAN> #>  9 DE               9 <SNAIVE> <STL decomposition model> <SNAIVE2> <SMEDIAN> #> 10 DE              10 <SNAIVE> <STL decomposition model> <SNAIVE2> <SMEDIAN> #> # ℹ 190 more rows  # Forecasting via fabletools::forecast() fable_frame <- model_frame %>%   forecast(h = n_ahead)  fable_frame #> # A fable: 19,200 x 6 [1h] <UTC> #> # Key:     bidding_zone, split, .model [800] #>    bidding_zone split .model time                #>    <chr>        <int> <chr>  <dttm>              #>  1 DE               1 SNAIVE 2019-04-11 00:00:00 #>  2 DE               1 SNAIVE 2019-04-11 01:00:00 #>  3 DE               1 SNAIVE 2019-04-11 02:00:00 #>  4 DE               1 SNAIVE 2019-04-11 03:00:00 #>  5 DE               1 SNAIVE 2019-04-11 04:00:00 #>  6 DE               1 SNAIVE 2019-04-11 05:00:00 #>  7 DE               1 SNAIVE 2019-04-11 06:00:00 #>  8 DE               1 SNAIVE 2019-04-11 07:00:00 #>  9 DE               1 SNAIVE 2019-04-11 08:00:00 #> 10 DE               1 SNAIVE 2019-04-11 09:00:00 #> # ℹ 19,190 more rows #> # ℹ 2 more variables: value <dist>, .mean <dbl>  # Convert fable_frame (fable) to future_frame (tibble) future_frame <- make_future(   fable = fable_frame,   context = context   )  future_frame #> # A tibble: 19,200 × 6 #>    time                bidding_zone model  split horizon point #>    <dttm>              <chr>        <chr>  <int>   <int> <dbl> #>  1 2019-04-11 00:00:00 DE           SNAIVE     1       1  33   #>  2 2019-04-11 01:00:00 DE           SNAIVE     1       2  32.6 #>  3 2019-04-11 02:00:00 DE           SNAIVE     1       3  34.1 #>  4 2019-04-11 03:00:00 DE           SNAIVE     1       4  36.9 #>  5 2019-04-11 04:00:00 DE           SNAIVE     1       5  44.7 #>  6 2019-04-11 05:00:00 DE           SNAIVE     1       6  53.6 #>  7 2019-04-11 06:00:00 DE           SNAIVE     1       7  59.9 #>  8 2019-04-11 07:00:00 DE           SNAIVE     1       8  46.9 #>  9 2019-04-11 08:00:00 DE           SNAIVE     1       9  48   #> 10 2019-04-11 09:00:00 DE           SNAIVE     1      10  47   #> # ℹ 19,190 more rows"},{"path":"https://ahaeusser.github.io/tscv/articles/vignette_02_cross_validation.html","id":"evaluation-of-forecast-accuracy","dir":"Articles","previous_headings":"","what":"Evaluation of forecast accuracy","title":"Time Series Cross Validation","text":"evaluate forecast accuracy, function make_accuracy() used. can define whether evaluate accuracy horizon split. Several accuracy metrics available: : mean error MAE: mean absolute error MSE: mean squared error RMSE: root mean squared error MAPE: mean absolute percentage error sMAPE: scaled mean absolute percentage error MPE: mean percentage error rMAE: relative mean absolute error (relative user-defined benchmark method)","code":""},{"path":"https://ahaeusser.github.io/tscv/articles/vignette_02_cross_validation.html","id":"forecast-accuracy-by-forecast-horizon","dir":"Articles","previous_headings":"Evaluation of forecast accuracy","what":"Forecast accuracy by forecast horizon","title":"Time Series Cross Validation","text":"","code":"# Estimate accuracy metrics by forecast horizon accuracy_horizon <- make_accuracy(   future_frame = future_frame,   main_frame = main_frame,   context = context,   dimension = \"horizon\" )  accuracy_horizon #> # A tibble: 2,688 × 6 #>    bidding_zone model   dimension     n metric value #>    <chr>        <chr>   <chr>     <int> <chr>  <dbl> #>  1 DE           SMEDIAN horizon       1 MAE     4.84 #>  2 DE           SMEDIAN horizon       2 MAE     5.05 #>  3 DE           SMEDIAN horizon       3 MAE     4.85 #>  4 DE           SMEDIAN horizon       4 MAE     4.50 #>  5 DE           SMEDIAN horizon       5 MAE     6.73 #>  6 DE           SMEDIAN horizon       6 MAE     6.66 #>  7 DE           SMEDIAN horizon       7 MAE     6.40 #>  8 DE           SMEDIAN horizon       8 MAE     6.73 #>  9 DE           SMEDIAN horizon       9 MAE     7.38 #> 10 DE           SMEDIAN horizon      10 MAE     9.06 #> # ℹ 2,678 more rows  # Visualize results accuracy_horizon %>%   filter(metric == \"MAE\") %>%   plot_line(     x = n,     y = value,     facet_var = bidding_zone,     facet_nrow = 1,     color = model,     title = \"Evaluation of forecast accuracy by forecast horizon\",     subtitle = \"Mean absolute error (MAE)\",     xlab = \"Forecast horizon (n-step-ahead)\",     caption = \"Data: ENTSO-E Transparency, own calculation\"     )"},{"path":"https://ahaeusser.github.io/tscv/articles/vignette_02_cross_validation.html","id":"forecast-accuracy-by-split","dir":"Articles","previous_headings":"Evaluation of forecast accuracy","what":"Forecast accuracy by split","title":"Time Series Cross Validation","text":"","code":"# Estimate accuracy metrics by forecast horizon accuracy_split <- make_accuracy(   future_frame = future_frame,   main_frame = main_frame,   context = context,   dimension = \"split\" )  accuracy_split #> # A tibble: 5,600 × 6 #>    bidding_zone model   dimension     n metric value #>    <chr>        <chr>   <chr>     <int> <chr>  <dbl> #>  1 DE           SMEDIAN split         1 MAE     2.80 #>  2 DE           SMEDIAN split         2 MAE     3.74 #>  3 DE           SMEDIAN split         3 MAE     2.70 #>  4 DE           SMEDIAN split         4 MAE     2.53 #>  5 DE           SMEDIAN split         5 MAE     4.54 #>  6 DE           SMEDIAN split         6 MAE     3.78 #>  7 DE           SMEDIAN split         7 MAE     4.38 #>  8 DE           SMEDIAN split         8 MAE     4.87 #>  9 DE           SMEDIAN split         9 MAE    11.5  #> 10 DE           SMEDIAN split        10 MAE     5.02 #> # ℹ 5,590 more rows  # Visualize results accuracy_split %>%   filter(metric == \"MAE\") %>%   plot_line(     x = n,     y = value,     facet_var = bidding_zone,     facet_nrow = 1,     color = model,     title = \"Evaluation of forecast accuracy by split\",     subtitle = \"Mean absolute error (MAE)\",     xlab = \"Split\",     caption = \"Data: ENTSO-E Transparency, own calculation\"     )"},{"path":"https://ahaeusser.github.io/tscv/articles/vignette_03_data_visualization.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Visualization of Time Series Data","text":"","code":"series_id = \"bidding_zone\" value_id = \"value\" index_id = \"time\"  context <- list(   series_id = series_id,   value_id = value_id,   index_id = index_id )  # Prepare data set main_frame <- elec_price %>%   filter(bidding_zone %in% c(\"DE\", \"FR\", \"NO1\", \"SE1\"))  main_frame #> # A tibble: 70,176 × 5 #>    time                item            unit      bidding_zone  value #>    <dttm>              <chr>           <chr>     <chr>         <dbl> #>  1 2019-01-01 00:00:00 Day-ahead Price [EUR/MWh] DE            10.1  #>  2 2019-01-01 01:00:00 Day-ahead Price [EUR/MWh] DE            -4.08 #>  3 2019-01-01 02:00:00 Day-ahead Price [EUR/MWh] DE            -9.91 #>  4 2019-01-01 03:00:00 Day-ahead Price [EUR/MWh] DE            -7.41 #>  5 2019-01-01 04:00:00 Day-ahead Price [EUR/MWh] DE           -12.6  #>  6 2019-01-01 05:00:00 Day-ahead Price [EUR/MWh] DE           -17.2  #>  7 2019-01-01 06:00:00 Day-ahead Price [EUR/MWh] DE           -15.1  #>  8 2019-01-01 07:00:00 Day-ahead Price [EUR/MWh] DE            -4.93 #>  9 2019-01-01 08:00:00 Day-ahead Price [EUR/MWh] DE            -6.33 #> 10 2019-01-01 09:00:00 Day-ahead Price [EUR/MWh] DE            -4.93 #> # ℹ 70,166 more rows"},{"path":"https://ahaeusser.github.io/tscv/articles/vignette_03_data_visualization.html","id":"line-charts","dir":"Articles","previous_headings":"","what":"Line charts","title":"Visualization of Time Series Data","text":"","code":"# Example 1 -------------------------------------------------------------------  main_frame %>%   plot_line(     x = time,     y = value,     color = bidding_zone,     facet_var = bidding_zone,     title = \"Day-ahead Electricity Spot Price\",     subtitle = \"2019-01-01 to 2020-12-31\",     xlab = \"Time\",     ylab = \"[EUR/MWh]\",     caption = \"Data: ENTSO-E Transparency\"     ) # Example 2 -------------------------------------------------------------------  main_frame %>%   plot_line(     x = time,     y = value,     color = bidding_zone,     title = \"Day-ahead Electricity Spot Price\",     subtitle = \"2019-01-01 to 2020-12-31\",     xlab = \"Time\",     ylab = \"[EUR/MWh]\",     caption = \"Data: ENTSO-E Transparency\"     )"},{"path":"https://ahaeusser.github.io/tscv/articles/vignette_03_data_visualization.html","id":"bar-charts","dir":"Articles","previous_headings":"","what":"Bar charts","title":"Visualization of Time Series Data","text":"","code":"# Estimate sample partial autocorrelation function corr_pacf <- estimate_pacf(   .data = main_frame,   context = context,   lag_max = 30 ) #> Warning: Returning more (or less) than 1 row per `summarise()` group was deprecated in #> dplyr 1.1.0. #> ℹ Please use `reframe()` instead. #> ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` #>   always returns an ungrouped data frame and adjust accordingly. #> ℹ The deprecated feature was likely used in the tscv package. #>   Please report the issue at <https://github.com/ahaeusser/tscv/issues>. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated.  corr_pacf #> # A tibble: 120 × 5 #>    bidding_zone type    lag    value sign  #>    <chr>        <chr> <int>    <dbl> <lgl> #>  1 DE           PACF      1  0.948   TRUE  #>  2 DE           PACF      2 -0.437   TRUE  #>  3 DE           PACF      3  0.00539 FALSE #>  4 DE           PACF      4  0.0735  TRUE  #>  5 DE           PACF      5  0.0735  TRUE  #>  6 DE           PACF      6  0.0898  TRUE  #>  7 DE           PACF      7  0.119   TRUE  #>  8 DE           PACF      8  0.0786  TRUE  #>  9 DE           PACF      9  0.0820  TRUE  #> 10 DE           PACF     10  0.0469  TRUE  #> # ℹ 110 more rows  # Visualize PACF as correlogram corr_pacf %>%   plot_bar(     x = lag,     y = value,     color = sign,     facet_var = bidding_zone,     position = \"dodge\",     title = \"Sample autocorrelation function\",     xlab = \"Lag\",     ylab = \"Correlation\",     caption = \"Data: ENTSO-E Transparency\"   )"},{"path":[]},{"path":"https://ahaeusser.github.io/tscv/articles/vignette_03_data_visualization.html","id":"histograms","dir":"Articles","previous_headings":"Distributions","what":"Histograms","title":"Visualization of Time Series Data","text":"","code":"# Example 1 -------------------------------------------------------------------  main_frame %>%   plot_histogram(     x = value,     color = bidding_zone,     title = \"Day-ahead Electricity Spot Price\",     xlab = \"[EUR/MWh]\",     ylab = \"Frequency\",     caption = \"Data: ENTSO-E Transparency\"     ) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. # Example 2 -------------------------------------------------------------------  main_frame %>%   plot_histogram(     x = value,     color = bidding_zone,     facet_var = bidding_zone,     facet_nrow = 1,     title = \"Day-ahead Electricity Spot Price\",     xlab = \"[EUR/MWh]\",     ylab = \"Frequency\",     caption = \"Data: ENTSO-E Transparency\"     ) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"https://ahaeusser.github.io/tscv/articles/vignette_03_data_visualization.html","id":"density","dir":"Articles","previous_headings":"Distributions","what":"Density","title":"Visualization of Time Series Data","text":"","code":"# Example 1 ------------------------------------------------------------------- main_frame %>%   plot_density(     x = value,     color = bidding_zone,     title = \"Day-ahead Electricity Spot Price\",     xlab = \"[EUR/MWh]\",     ylab = \"Density\",     caption = \"Data: ENTSO-E Transparency\"     ) # Example 2 ------------------------------------------------------------------- main_frame %>%   plot_density(     x = value,     color = bidding_zone,     facet_var = bidding_zone,     facet_nrow = 1,     title = \"Day-ahead Electricity Spot Price\",     xlab = \"[EUR/MWh]\",     ylab = \"Density\",     caption = \"Data: ENTSO-E Transparency\"     )"},{"path":"https://ahaeusser.github.io/tscv/articles/vignette_03_data_visualization.html","id":"qq-plot","dir":"Articles","previous_headings":"Distributions","what":"QQ-Plot","title":"Visualization of Time Series Data","text":"","code":"# Example 1 ------------------------------------------------------------------- main_frame %>%   plot_qq(     x = value,     color = bidding_zone,     title = \"Day-ahead Electricity Spot Price\",     xlab = \"Theoretical Quantile\",     ylab = \"Sample Quantile\",     caption = \"Data: ENTSO-E Transparency\"     ) # Example 2 ------------------------------------------------------------------- main_frame %>%   plot_qq(     x = value,     color = bidding_zone,     facet_var = bidding_zone,     title = \"Day-ahead Electricity Spot Price\",     xlab = \"Theoretical Quantile\",     ylab = \"Sample Quantile\",     caption = \"Data: ENTSO-E Transparency\"     )"},{"path":"https://ahaeusser.github.io/tscv/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander Häußer. Author, maintainer.","code":""},{"path":"https://ahaeusser.github.io/tscv/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Häußer (2024). tscv: Functions utilities tidy time series forecasting time series cross-validation. R package version 0.1.1, https://ahaeusser.github.io/tscv/, https://github.com/ahaeusser/tscv.","code":"@Manual{,   title = {tscv: Functions and utilities for tidy time series forecasting and time series cross-validation},   author = {Alexander Häußer},   year = {2024},   note = {R package version 0.1.1, https://ahaeusser.github.io/tscv/},   url = {https://github.com/ahaeusser/tscv}, }"},{"path":"https://ahaeusser.github.io/tscv/index.html","id":"tscv","dir":"","previous_headings":"","what":"Functions and utilities for tidy time series forecasting and time series cross-validation","title":"Functions and utilities for tidy time series forecasting and time series cross-validation","text":"package tscv provides collection functions tools time series analysis forecasting well time series cross-validation. mainly set wrapper helper functions well extensions packages tsibble, fable fabletools find useful research area time series forecasting. Disclaimer: tscv package highly experimental likely (substantial) changes near future.","code":""},{"path":"https://ahaeusser.github.io/tscv/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functions and utilities for tidy time series forecasting and time series cross-validation","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"ahaeusser/tscv\")"},{"path":"https://ahaeusser.github.io/tscv/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Functions and utilities for tidy time series forecasting and time series cross-validation","text":"","code":"# Load relevant packages library(tscv) library(tidyverse) library(tsibble) library(fable) library(feasts)"},{"path":"https://ahaeusser.github.io/tscv/index.html","id":"data-preparation","dir":"","previous_headings":"","what":"Data preparation","title":"Functions and utilities for tidy time series forecasting and time series cross-validation","text":"data set elec_price tibble day-ahead electricity spot prices [EUR/MWh] ENTSO-E Transparency Platform. data set contains hourly time series data 2019-01-01 2020-12-31 8 European bidding zones (BZN): DE: Germany (including Luxembourg) DK: Denmark ES: Spain FI: Finland FR: France NL: Netherlands NO1: Norway 1 (Oslo) SE1: Sweden 1 (Lulea) vignette, use four time series demonstrate functionality package (data set filtered bidding zones Germany, France, Norway Sweden). can use function plot_line() visualize four time series. function summarise_data() used explore structure (start date, end date, number observations number missing zero values). function summarise_stats() calculates descriptive statistics time series.","code":"series_id = \"bidding_zone\" value_id = \"value\" index_id = \"time\"  context <- list(   series_id = series_id,   value_id = value_id,   index_id = index_id )  # Prepare data set main_frame <- elec_price %>%   filter(bidding_zone %in% c(\"DE\", \"FR\", \"NO1\", \"SE1\"))  main_frame #> # A tibble: 70,176 × 5 #>    time                item            unit      bidding_zone  value #>    <dttm>              <chr>           <chr>     <chr>         <dbl> #>  1 2019-01-01 00:00:00 Day-ahead Price [EUR/MWh] DE            10.1  #>  2 2019-01-01 01:00:00 Day-ahead Price [EUR/MWh] DE            -4.08 #>  3 2019-01-01 02:00:00 Day-ahead Price [EUR/MWh] DE            -9.91 #>  4 2019-01-01 03:00:00 Day-ahead Price [EUR/MWh] DE            -7.41 #>  5 2019-01-01 04:00:00 Day-ahead Price [EUR/MWh] DE           -12.6  #>  6 2019-01-01 05:00:00 Day-ahead Price [EUR/MWh] DE           -17.2  #>  7 2019-01-01 06:00:00 Day-ahead Price [EUR/MWh] DE           -15.1  #>  8 2019-01-01 07:00:00 Day-ahead Price [EUR/MWh] DE            -4.93 #>  9 2019-01-01 08:00:00 Day-ahead Price [EUR/MWh] DE            -6.33 #> 10 2019-01-01 09:00:00 Day-ahead Price [EUR/MWh] DE            -4.93 #> # ℹ 70,166 more rows  main_frame %>%   plot_line(     x = time,     y = value,     color = bidding_zone,     facet_var = bidding_zone,     title = \"Day-ahead Electricity Spot Price\",     subtitle = \"2019-01-01 to 2020-12-31\",     xlab = \"Time\",     ylab = \"[EUR/MWh]\",     caption = \"Data: ENTSO-E Transparency\"     ) summarise_data(   .data = main_frame,   context = context ) #> # A tibble: 4 × 8 #>   bidding_zone start               end                 n_obs n_missing #>   <chr>        <dttm>              <dttm>              <int>     <int> #> 1 DE           2019-01-01 00:00:00 2020-12-31 23:00:00 17544         0 #> 2 FR           2019-01-01 00:00:00 2020-12-31 23:00:00 17544         0 #> 3 NO1          2019-01-01 00:00:00 2020-12-31 23:00:00 17544         0 #> 4 SE1          2019-01-01 00:00:00 2020-12-31 23:00:00 17544         0 #> # ℹ 3 more variables: pct_missing <dbl>, n_zeros <int>, pct_zeros <dbl>  summarise_stats(   .data = main_frame,   context = context ) #> # A tibble: 4 × 11 #>   bidding_zone  mean median  mode    sd     p0   p25   p75  p100 skewness #>   <chr>        <dbl>  <dbl> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl>    <dbl> #> 1 DE            34.1   35.1 35.9   16.9 -90.0  26.3   43.8  200.   -0.776 #> 2 FR            35.8   36   37.2   15.5 -75.8  26.6   44.9  200.    0.323 #> 3 NO1           24.3   26.9  2.66  17.1  -1.73  6.95  38.8  109.    0.189 #> 4 SE1           26.1   27.9 37.9   15.9  -1.73 11.4   38.5  189.    0.378 #> # ℹ 1 more variable: kurtosis <dbl>"},{"path":"https://ahaeusser.github.io/tscv/index.html","id":"split-data-into-training-and-testing","dir":"","previous_headings":"","what":"Split data into training and testing","title":"Functions and utilities for tidy time series forecasting and time series cross-validation","text":"prepare data set time series cross-validation (TSCV), can use function make_split(). function splits data several slices training testing (.e. partitioning time slices) time series cross-validation. can choose stretch slide. first expanding window approach, latter fixed window approach. Furthermore, define (initial) window size training testing via n_init n_ahead, well step size increments via n_skip. options splitting data available via type (see function reference details).","code":"# Setup for time series cross validation type = \"first\" value = 2400      # size for training window n_ahead = 24      # size for testing window (= forecast horizon) n_skip = 23       # skip 23 observations n_lag = 0         # no lag mode = \"slide\"    # fixed window approach exceed = FALSE    # only pseudo out-of-sample forecast  split_frame <- make_split(   main_frame = main_frame,   context = context,   type = type,   value = value,   n_ahead = n_ahead,   n_skip = n_skip,   n_lag = n_lag,   mode = mode,   exceed = exceed )  # For illustration, only the first 50 splits are used split_frame <- split_frame %>%   filter(split %in% c(1:50))  split_frame #> # A tibble: 200 × 4 #>    bidding_zone split train         test       #>    <chr>        <int> <list>        <list>     #>  1 DE               1 <int [2,400]> <int [24]> #>  2 DE               2 <int [2,400]> <int [24]> #>  3 DE               3 <int [2,400]> <int [24]> #>  4 DE               4 <int [2,400]> <int [24]> #>  5 DE               5 <int [2,400]> <int [24]> #>  6 DE               6 <int [2,400]> <int [24]> #>  7 DE               7 <int [2,400]> <int [24]> #>  8 DE               8 <int [2,400]> <int [24]> #>  9 DE               9 <int [2,400]> <int [24]> #> 10 DE              10 <int [2,400]> <int [24]> #> # ℹ 190 more rows"},{"path":"https://ahaeusser.github.io/tscv/index.html","id":"training-and-forecasting","dir":"","previous_headings":"","what":"Training and forecasting","title":"Functions and utilities for tidy time series forecasting and time series cross-validation","text":"training test splits prepared within split_frame ready forecasting. function slice_train() slices data main_frame according splits within split_frame. using forecasting methods packages fable fabletools, convert data set main_frame tibble tsibble. Due sample size computation time, simple benchmark methods used: SNAIVE: Seasonal naive model weekly seasonality (package fable) STL-NAIVE: STL-decomposition model naive forecast. series decomposed via STL seasonal adjusted series predicted via naive approach. Afterwards, seasonal component added forecasts (packages fable feasts) SNAIVE2: Variation seasonal naive approach. Mondays, Saturdays Sundays treated weekly lag. Tuesdays, Wednesdays, Thursdays Fridays treated daily lag. SMEDIAN: Seasonal median model functions SMEDIAN() SNAIVE2() extensions fable package","code":"# Slice training data from main_frame according to split_frame train_frame <- slice_train(   main_frame = main_frame,   split_frame = split_frame,   context = context   )  train_frame #> # A tibble: 480,000 × 6 #>    time                item            unit      bidding_zone  value split #>    <dttm>              <chr>           <chr>     <chr>         <dbl> <int> #>  1 2019-01-01 00:00:00 Day-ahead Price [EUR/MWh] DE            10.1      1 #>  2 2019-01-01 01:00:00 Day-ahead Price [EUR/MWh] DE            -4.08     1 #>  3 2019-01-01 02:00:00 Day-ahead Price [EUR/MWh] DE            -9.91     1 #>  4 2019-01-01 03:00:00 Day-ahead Price [EUR/MWh] DE            -7.41     1 #>  5 2019-01-01 04:00:00 Day-ahead Price [EUR/MWh] DE           -12.6      1 #>  6 2019-01-01 05:00:00 Day-ahead Price [EUR/MWh] DE           -17.2      1 #>  7 2019-01-01 06:00:00 Day-ahead Price [EUR/MWh] DE           -15.1      1 #>  8 2019-01-01 07:00:00 Day-ahead Price [EUR/MWh] DE            -4.93     1 #>  9 2019-01-01 08:00:00 Day-ahead Price [EUR/MWh] DE            -6.33     1 #> 10 2019-01-01 09:00:00 Day-ahead Price [EUR/MWh] DE            -4.93     1 #> # ℹ 479,990 more rows  # Convert tibble to tsibble train_frame <- train_frame %>%   as_tsibble(     index = time,     key = c(bidding_zone, split)     )  train_frame #> # A tsibble: 480,000 x 6 [1h] <UTC> #> # Key:       bidding_zone, split [200] #>    time                item            unit      bidding_zone  value split #>    <dttm>              <chr>           <chr>     <chr>         <dbl> <int> #>  1 2019-01-01 00:00:00 Day-ahead Price [EUR/MWh] DE            10.1      1 #>  2 2019-01-01 01:00:00 Day-ahead Price [EUR/MWh] DE            -4.08     1 #>  3 2019-01-01 02:00:00 Day-ahead Price [EUR/MWh] DE            -9.91     1 #>  4 2019-01-01 03:00:00 Day-ahead Price [EUR/MWh] DE            -7.41     1 #>  5 2019-01-01 04:00:00 Day-ahead Price [EUR/MWh] DE           -12.6      1 #>  6 2019-01-01 05:00:00 Day-ahead Price [EUR/MWh] DE           -17.2      1 #>  7 2019-01-01 06:00:00 Day-ahead Price [EUR/MWh] DE           -15.1      1 #>  8 2019-01-01 07:00:00 Day-ahead Price [EUR/MWh] DE            -4.93     1 #>  9 2019-01-01 08:00:00 Day-ahead Price [EUR/MWh] DE            -6.33     1 #> 10 2019-01-01 09:00:00 Day-ahead Price [EUR/MWh] DE            -4.93     1 #> # ℹ 479,990 more rows  # Model training via fabletools::model() model_frame <- train_frame %>%   model(     \"SNAIVE\" = SNAIVE(value ~ lag(\"week\")),     \"STL-NAIVE\" = decomposition_model(STL(value), NAIVE(season_adjust)),     \"SNAIVE2\" = SNAIVE2(value),     \"SMEDIAN\" = SMEDIAN(value ~ lag(\"week\"))     )  model_frame #> # A mable: 200 x 6 #> # Key:     bidding_zone, split [200] #>    bidding_zone split   SNAIVE               `STL-NAIVE`   SNAIVE2   SMEDIAN #>    <chr>        <int>  <model>                   <model>   <model>   <model> #>  1 DE               1 <SNAIVE> <STL decomposition model> <SNAIVE2> <SMEDIAN> #>  2 DE               2 <SNAIVE> <STL decomposition model> <SNAIVE2> <SMEDIAN> #>  3 DE               3 <SNAIVE> <STL decomposition model> <SNAIVE2> <SMEDIAN> #>  4 DE               4 <SNAIVE> <STL decomposition model> <SNAIVE2> <SMEDIAN> #>  5 DE               5 <SNAIVE> <STL decomposition model> <SNAIVE2> <SMEDIAN> #>  6 DE               6 <SNAIVE> <STL decomposition model> <SNAIVE2> <SMEDIAN> #>  7 DE               7 <SNAIVE> <STL decomposition model> <SNAIVE2> <SMEDIAN> #>  8 DE               8 <SNAIVE> <STL decomposition model> <SNAIVE2> <SMEDIAN> #>  9 DE               9 <SNAIVE> <STL decomposition model> <SNAIVE2> <SMEDIAN> #> 10 DE              10 <SNAIVE> <STL decomposition model> <SNAIVE2> <SMEDIAN> #> # ℹ 190 more rows  # Forecasting via fabletools::forecast() fable_frame <- model_frame %>%   forecast(h = n_ahead)  fable_frame #> # A fable: 19,200 x 6 [1h] <UTC> #> # Key:     bidding_zone, split, .model [800] #>    bidding_zone split .model time                #>    <chr>        <int> <chr>  <dttm>              #>  1 DE               1 SNAIVE 2019-04-11 00:00:00 #>  2 DE               1 SNAIVE 2019-04-11 01:00:00 #>  3 DE               1 SNAIVE 2019-04-11 02:00:00 #>  4 DE               1 SNAIVE 2019-04-11 03:00:00 #>  5 DE               1 SNAIVE 2019-04-11 04:00:00 #>  6 DE               1 SNAIVE 2019-04-11 05:00:00 #>  7 DE               1 SNAIVE 2019-04-11 06:00:00 #>  8 DE               1 SNAIVE 2019-04-11 07:00:00 #>  9 DE               1 SNAIVE 2019-04-11 08:00:00 #> 10 DE               1 SNAIVE 2019-04-11 09:00:00 #> # ℹ 19,190 more rows #> # ℹ 2 more variables: value <dist>, .mean <dbl>  # Convert fable_frame (fable) to future_frame (tibble) future_frame <- make_future(   fable = fable_frame,   context = context   )  future_frame #> # A tibble: 19,200 × 6 #>    time                bidding_zone model  split horizon point #>    <dttm>              <chr>        <chr>  <int>   <int> <dbl> #>  1 2019-04-11 00:00:00 DE           SNAIVE     1       1  33   #>  2 2019-04-11 01:00:00 DE           SNAIVE     1       2  32.6 #>  3 2019-04-11 02:00:00 DE           SNAIVE     1       3  34.1 #>  4 2019-04-11 03:00:00 DE           SNAIVE     1       4  36.9 #>  5 2019-04-11 04:00:00 DE           SNAIVE     1       5  44.7 #>  6 2019-04-11 05:00:00 DE           SNAIVE     1       6  53.6 #>  7 2019-04-11 06:00:00 DE           SNAIVE     1       7  59.9 #>  8 2019-04-11 07:00:00 DE           SNAIVE     1       8  46.9 #>  9 2019-04-11 08:00:00 DE           SNAIVE     1       9  48   #> 10 2019-04-11 09:00:00 DE           SNAIVE     1      10  47   #> # ℹ 19,190 more rows"},{"path":"https://ahaeusser.github.io/tscv/index.html","id":"evaluation-of-forecast-accuracy","dir":"","previous_headings":"","what":"Evaluation of forecast accuracy","title":"Functions and utilities for tidy time series forecasting and time series cross-validation","text":"evaluate forecast accuracy, function make_accuracy() used. can define whether evaluate accuracy horizon split. Several accuracy metrics available: : mean error MAE: mean absolute error MSE: mean squared error RMSE: root mean squared error MAPE: mean absolute percentage error sMAPE: scaled mean absolute percentage error MPE: mean percentage error rMAE: relative mean absolute error (relative user-defined benchmark method)","code":""},{"path":"https://ahaeusser.github.io/tscv/index.html","id":"forecast-accuracy-by-forecast-horizon","dir":"","previous_headings":"Evaluation of forecast accuracy","what":"Forecast accuracy by forecast horizon","title":"Functions and utilities for tidy time series forecasting and time series cross-validation","text":"","code":"# Estimate accuracy metrics by forecast horizon accuracy_horizon <- make_accuracy(   future_frame = future_frame,   main_frame = main_frame,   context = context,   dimension = \"horizon\" )  accuracy_horizon #> # A tibble: 2,688 × 6 #>    bidding_zone model   dimension     n metric value #>    <chr>        <chr>   <chr>     <int> <chr>  <dbl> #>  1 DE           SMEDIAN horizon       1 MAE     4.84 #>  2 DE           SMEDIAN horizon       2 MAE     5.05 #>  3 DE           SMEDIAN horizon       3 MAE     4.85 #>  4 DE           SMEDIAN horizon       4 MAE     4.50 #>  5 DE           SMEDIAN horizon       5 MAE     6.73 #>  6 DE           SMEDIAN horizon       6 MAE     6.66 #>  7 DE           SMEDIAN horizon       7 MAE     6.40 #>  8 DE           SMEDIAN horizon       8 MAE     6.73 #>  9 DE           SMEDIAN horizon       9 MAE     7.38 #> 10 DE           SMEDIAN horizon      10 MAE     9.06 #> # ℹ 2,678 more rows  # Visualize results accuracy_horizon %>%   filter(metric == \"MAE\") %>%   plot_line(     x = n,     y = value,     facet_var = bidding_zone,     facet_nrow = 1,     color = model,     title = \"Evaluation of forecast accuracy by forecast horizon\",     subtitle = \"Mean absolute error (MAE)\",     xlab = \"Forecast horizon (n-step-ahead)\",     caption = \"Data: ENTSO-E Transparency, own calculation\"     )"},{"path":"https://ahaeusser.github.io/tscv/index.html","id":"forecast-accuracy-by-split","dir":"","previous_headings":"Evaluation of forecast accuracy","what":"Forecast accuracy by split","title":"Functions and utilities for tidy time series forecasting and time series cross-validation","text":"","code":"# Estimate accuracy metrics by forecast horizon accuracy_split <- make_accuracy(   future_frame = future_frame,   main_frame = main_frame,   context = context,   dimension = \"split\" )  accuracy_split #> # A tibble: 5,600 × 6 #>    bidding_zone model   dimension     n metric value #>    <chr>        <chr>   <chr>     <int> <chr>  <dbl> #>  1 DE           SMEDIAN split         1 MAE     2.80 #>  2 DE           SMEDIAN split         2 MAE     3.74 #>  3 DE           SMEDIAN split         3 MAE     2.70 #>  4 DE           SMEDIAN split         4 MAE     2.53 #>  5 DE           SMEDIAN split         5 MAE     4.54 #>  6 DE           SMEDIAN split         6 MAE     3.78 #>  7 DE           SMEDIAN split         7 MAE     4.38 #>  8 DE           SMEDIAN split         8 MAE     4.87 #>  9 DE           SMEDIAN split         9 MAE    11.5  #> 10 DE           SMEDIAN split        10 MAE     5.02 #> # ℹ 5,590 more rows  # Visualize results accuracy_split %>%   filter(metric == \"MAE\") %>%   plot_line(     x = n,     y = value,     facet_var = bidding_zone,     facet_nrow = 1,     color = model,     title = \"Evaluation of forecast accuracy by split\",     subtitle = \"Mean absolute error (MAE)\",     xlab = \"Split\",     caption = \"Data: ENTSO-E Transparency, own calculation\"     )"},{"path":"https://ahaeusser.github.io/tscv/reference/acf_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the sample autocorrelation of a numeric vector — acf_vec","title":"Estimate the sample autocorrelation of a numeric vector — acf_vec","text":"acf_vec estimates sample autocorrelation function   numeric vector.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/acf_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the sample autocorrelation of a numeric vector — acf_vec","text":"","code":"acf_vec(x, lag_max = 24, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/acf_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the sample autocorrelation of a numeric vector — acf_vec","text":"x Numeric vector. lag_max Maximum lag integer. ... arguments passed stats::acf().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/acf_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the sample autocorrelation of a numeric vector — acf_vec","text":"x Numeric vector.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/check_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check, convert and shape the input data — check_data","title":"Check, convert and shape the input data — check_data","text":"function checks whether input data valid tsibble (regular spaced time    ordered). Furthermore, implicit missing values turned explicit missing values (existing    missing values left untouched). data provided wide format, pivoted    long format.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/check_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check, convert and shape the input data — check_data","text":"","code":"check_data(data, fill_missing = TRUE)"},{"path":"https://ahaeusser.github.io/tscv/reference/check_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check, convert and shape the input data — check_data","text":"data valid tsibble, either long wide format. fill_missing Logical value. TRUE, implicit missing values turned explicit missing values.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/check_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check, convert and shape the input data — check_data","text":"data valid tsibble long format one measurement variable.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/DSHW.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic train a DSHW model — DSHW","title":"Automatic train a DSHW model — DSHW","text":"Automatic train Double Seasonal Holt-Winters model (DSHW). function    wrapper forecast::dshw().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/DSHW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic train a DSHW model — DSHW","text":"","code":"DSHW(formula, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/DSHW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic train a DSHW model — DSHW","text":"formula Model specification (see \"Specials\" section, currently use ...) ... arguments passed forecast::dshw().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/DSHW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic train a DSHW model — DSHW","text":"dshw_model object class DSHW.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/elec_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Hourly electricity load (actual values and forecasts) — elec_load","title":"Hourly electricity load (actual values and forecasts) — elec_load","text":"Hourly tibble actual electricity loads load forecasts   ENTSO-E Transparency Platform. data set contains time series data   2019-01-01 00:00:00 2019-12-31 23:00:00 8 bidding zones within   Europe (DE, DK1, ES, FI, FR, NL, NO1, SE1). original data   quarter-hourly basis (15-minutes interval), aggregated hourly data.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/elec_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hourly electricity load (actual values and forecasts) — elec_load","text":"","code":"data(elec_load)"},{"path":"https://ahaeusser.github.io/tscv/reference/elec_load.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hourly electricity load (actual values and forecasts) — elec_load","text":"time series object class tibble 140.160 rows 5 columns: time: Date time index item: Time series name unit: Measured unit bidding_zone: Bidding zone value: Measurement variable","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/elec_load.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Hourly electricity load (actual values and forecasts) — elec_load","text":"ENTSO-E Transparency Platform","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/elec_load.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hourly electricity load (actual values and forecasts) — elec_load","text":"","code":"data(elec_load)"},{"path":"https://ahaeusser.github.io/tscv/reference/elec_price.html","id":null,"dir":"Reference","previous_headings":"","what":"Hourly day-ahead electricity spot prices — elec_price","title":"Hourly day-ahead electricity spot prices — elec_price","text":"Hourly tibble day-ahead electricity spot prices   ENTSO-E Transparency Platform. data set contains time series data   2019-01-01 00:00:00 2020-12-31 23:00:00 8 bidding zones   within Europe (DE, DK1, ES, FI, FR, NL, NO1, SE1).","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/elec_price.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hourly day-ahead electricity spot prices — elec_price","text":"","code":"data(elec_price)"},{"path":"https://ahaeusser.github.io/tscv/reference/elec_price.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hourly day-ahead electricity spot prices — elec_price","text":"time series object class tibble 140.352 rows 5 columns: time: Date time index item: Time series name unit: Measured unit bidding_zone: Bidding zone value: Measurement variable","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/elec_price.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Hourly day-ahead electricity spot prices — elec_price","text":"ENTSO-E Transparency Platform","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/elec_price.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hourly day-ahead electricity spot prices — elec_price","text":"","code":"data(elec_price)"},{"path":"https://ahaeusser.github.io/tscv/reference/ELM.html","id":null,"dir":"Reference","previous_headings":"","what":"Extreme Learning Machine (ELM) — ELM","title":"Extreme Learning Machine (ELM) — ELM","text":"Automatic train Extreme Learning Machines (ELMs) model.   function wrapper nnfor::elm().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/ELM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extreme Learning Machine (ELM) — ELM","text":"","code":"ELM(formula, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/ELM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extreme Learning Machine (ELM) — ELM","text":"formula Model specification (see \"Specials\" section, currently use...) ... arguments passed nnfor::elm().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/ELM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extreme Learning Machine (ELM) — ELM","text":"elm_model object class ELM.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/estimate_acf.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the sample autocorrelation — estimate_acf","title":"Estimate the sample autocorrelation — estimate_acf","text":"function estimates sample autocorrelation function   tibble containing several time series.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/estimate_acf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the sample autocorrelation — estimate_acf","text":"","code":"estimate_acf(.data, context, lag_max = 24, level = 0.9, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/estimate_acf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the sample autocorrelation — estimate_acf","text":".data tibble containing time series data. context named list identifiers seried_id, value_id index_id. lag_max Maximum lag integer. level Numeric value. confidence level check significance. ... arguments passed stats::acf().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/estimate_acf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the sample autocorrelation — estimate_acf","text":"data tibble column unique identifier   time series columns type, lag value.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/estimate_kurtosis.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate kurtosis — estimate_kurtosis","title":"Estimate kurtosis — estimate_kurtosis","text":"function estimates kurtosis distribution.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/estimate_kurtosis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate kurtosis — estimate_kurtosis","text":"","code":"estimate_kurtosis(x, na_rm = TRUE)"},{"path":"https://ahaeusser.github.io/tscv/reference/estimate_kurtosis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate kurtosis — estimate_kurtosis","text":"x Numeric vector. na_rm Logical value. TRUE, missing values dropped.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/estimate_kurtosis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate kurtosis — estimate_kurtosis","text":"Numeric value.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/estimate_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate mode of a distribution based on Kernel Density Estimation — estimate_mode","title":"Estimate mode of a distribution based on Kernel Density Estimation — estimate_mode","text":"function estimates mode distribution based Kernel Density Estimation.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/estimate_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate mode of a distribution based on Kernel Density Estimation — estimate_mode","text":"","code":"estimate_mode(x, na_rm = TRUE, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/estimate_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate mode of a distribution based on Kernel Density Estimation — estimate_mode","text":"x Numeric vector. na_rm Logical value. TRUE, missing values dropped. ... arguments passed stats::densitiy().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/estimate_mode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate mode of a distribution based on Kernel Density Estimation — estimate_mode","text":"mode Numeric value. mode distribution.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/estimate_pacf.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the sample partial autocorrelation — estimate_pacf","title":"Estimate the sample partial autocorrelation — estimate_pacf","text":"function estimates sample partial autocorrelation   function tibble containing several time series.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/estimate_pacf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the sample partial autocorrelation — estimate_pacf","text":"","code":"estimate_pacf(.data, context, lag_max = 24, level = 0.9, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/estimate_pacf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the sample partial autocorrelation — estimate_pacf","text":".data tibble containing time series data. context named list identifiers seried_id, value_id index_id. lag_max Maximum lag integer. level Numeric value. confidence level check significance. ... arguments passed stats::pacf().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/estimate_pacf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the sample partial autocorrelation — estimate_pacf","text":"data tibble column unique identifier   time series columns type, lag value.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/estimate_skewness.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate skewness — estimate_skewness","title":"Estimate skewness — estimate_skewness","text":"function estimates skewness numeric vector.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/estimate_skewness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate skewness — estimate_skewness","text":"","code":"estimate_skewness(x, na_rm = TRUE)"},{"path":"https://ahaeusser.github.io/tscv/reference/estimate_skewness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate skewness — estimate_skewness","text":"x Numeric vector. na_rm Logical value. TRUE, missing values dropped.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/estimate_skewness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate skewness — estimate_skewness","text":"Numeric value.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/expand_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand the split_frame — expand_split","title":"Expand the split_frame — expand_split","text":"function expands split_frame","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/expand_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand the split_frame — expand_split","text":"","code":"expand_split(split_frame, context)"},{"path":"https://ahaeusser.github.io/tscv/reference/expand_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand the split_frame — expand_split","text":"split_frame tibble context named list identifiers seried_id, value_id index_id.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/expand_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand the split_frame — expand_split","text":"split_frame tibble containing train test splits per time series.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/EXPERT.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic train a EXPERT model — EXPERT","title":"Automatic train a EXPERT model — EXPERT","text":"Automatic train EXPERT model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/EXPERT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic train a EXPERT model — EXPERT","text":"","code":"EXPERT(formula, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/EXPERT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic train a EXPERT model — EXPERT","text":"formula Model specification (see \"Specials\" section, currently use ...) ... arguments (currently use).","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/EXPERT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic train a EXPERT model — EXPERT","text":"expert_model object class EXPERT.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/file_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a name for a folder or file — file_name","title":"Create a name for a folder or file — file_name","text":"function creates name folder file.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/file_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a name for a folder or file — file_name","text":"","code":"file_name(   primary,   extension = NULL,   add_time = TRUE,   time_format = \"%Y%m%d_%H%M%S\" )"},{"path":"https://ahaeusser.github.io/tscv/reference/file_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a name for a folder or file — file_name","text":"primary Character value. Primary file name used. extension Character value. File name extension used (e.g. \".csv\", \".rda\"). add_time Logical value. TRUE, time stamp added front file name. time_format Character value. time format time stamp.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/file_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a name for a folder or file — file_name","text":"Character value.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.DSHW.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract fitted values from a trained DSHW model — fitted.DSHW","title":"Extract fitted values from a trained DSHW model — fitted.DSHW","text":"Extract fitted values trained DSHW model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.DSHW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract fitted values from a trained DSHW model — fitted.DSHW","text":"","code":"# S3 method for class 'DSHW' fitted(object, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.DSHW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract fitted values from a trained DSHW model — fitted.DSHW","text":"object object class DSHW. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.DSHW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract fitted values from a trained DSHW model — fitted.DSHW","text":"Fitted values tsibble.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.ELM.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract fitted values from a trained ELM model — fitted.ELM","title":"Extract fitted values from a trained ELM model — fitted.ELM","text":"Extract fitted values trained ELM model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.ELM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract fitted values from a trained ELM model — fitted.ELM","text":"","code":"# S3 method for class 'ELM' fitted(object, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.ELM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract fitted values from a trained ELM model — fitted.ELM","text":"object object class ELM. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.ELM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract fitted values from a trained ELM model — fitted.ELM","text":"Fitted values tsibble.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.EXPERT.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract fitted values from a trained EXPERT model — fitted.EXPERT","title":"Extract fitted values from a trained EXPERT model — fitted.EXPERT","text":"Extract fitted values trained EXPERT model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.EXPERT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract fitted values from a trained EXPERT model — fitted.EXPERT","text":"","code":"# S3 method for class 'EXPERT' fitted(object, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.EXPERT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract fitted values from a trained EXPERT model — fitted.EXPERT","text":"object object class EXPERT. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.EXPERT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract fitted values from a trained EXPERT model — fitted.EXPERT","text":"Fitted values tsibble.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.MEDIAN.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract fitted values from a trained median model — fitted.MEDIAN","title":"Extract fitted values from a trained median model — fitted.MEDIAN","text":"Extract fitted values trained median model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.MEDIAN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract fitted values from a trained median model — fitted.MEDIAN","text":"","code":"# S3 method for class 'MEDIAN' fitted(object, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.MEDIAN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract fitted values from a trained median model — fitted.MEDIAN","text":"object object class MEDIAN. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.MEDIAN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract fitted values from a trained median model — fitted.MEDIAN","text":"Fitted values tsibble.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.MLP.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract fitted values from a trained MLP model — fitted.MLP","title":"Extract fitted values from a trained MLP model — fitted.MLP","text":"Extract fitted values trained MLP model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.MLP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract fitted values from a trained MLP model — fitted.MLP","text":"","code":"# S3 method for class 'MLP' fitted(object, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.MLP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract fitted values from a trained MLP model — fitted.MLP","text":"object object class MLP. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.MLP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract fitted values from a trained MLP model — fitted.MLP","text":"Fitted values tsibble.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.SMEAN.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract fitted values from a trained seasonal mean model — fitted.SMEAN","title":"Extract fitted values from a trained seasonal mean model — fitted.SMEAN","text":"Extract fitted values trained seasonal mean model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.SMEAN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract fitted values from a trained seasonal mean model — fitted.SMEAN","text":"","code":"# S3 method for class 'SMEAN' fitted(object, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.SMEAN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract fitted values from a trained seasonal mean model — fitted.SMEAN","text":"object object class SMEAN. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.SMEAN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract fitted values from a trained seasonal mean model — fitted.SMEAN","text":"Fitted values tsibble.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.SMEDIAN.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract fitted values from a trained seasonal median model — fitted.SMEDIAN","title":"Extract fitted values from a trained seasonal median model — fitted.SMEDIAN","text":"Extract fitted values trained seasonal median model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.SMEDIAN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract fitted values from a trained seasonal median model — fitted.SMEDIAN","text":"","code":"# S3 method for class 'SMEDIAN' fitted(object, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.SMEDIAN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract fitted values from a trained seasonal median model — fitted.SMEDIAN","text":"object object class SMEDIAN. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.SMEDIAN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract fitted values from a trained seasonal median model — fitted.SMEDIAN","text":"Fitted values tsibble.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.SNAIVE2.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract fitted values from a trained seasonal naive model — fitted.SNAIVE2","title":"Extract fitted values from a trained seasonal naive model — fitted.SNAIVE2","text":"Extract fitted values trained seasonal naive model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.SNAIVE2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract fitted values from a trained seasonal naive model — fitted.SNAIVE2","text":"","code":"# S3 method for class 'SNAIVE2' fitted(object, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.SNAIVE2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract fitted values from a trained seasonal naive model — fitted.SNAIVE2","text":"object object class SNAIVE2. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.SNAIVE2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract fitted values from a trained seasonal naive model — fitted.SNAIVE2","text":"Fitted values tsibble.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.TBATS.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract fitted values from a trained TBATS model — fitted.TBATS","title":"Extract fitted values from a trained TBATS model — fitted.TBATS","text":"Extract fitted values trained TBATS model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.TBATS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract fitted values from a trained TBATS model — fitted.TBATS","text":"","code":"# S3 method for class 'TBATS' fitted(object, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.TBATS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract fitted values from a trained TBATS model — fitted.TBATS","text":"object object class TBATS. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/fitted.TBATS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract fitted values from a trained TBATS model — fitted.TBATS","text":"Fitted values tsibble.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.DSHW.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast a trained DSHW model — forecast.DSHW","title":"Forecast a trained DSHW model — forecast.DSHW","text":"Forecast trained DSHW model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.DSHW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast a trained DSHW model — forecast.DSHW","text":"","code":"# S3 method for class 'DSHW' forecast(object, new_data, specials = NULL, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.DSHW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast a trained DSHW model — forecast.DSHW","text":"object object class DSHW. new_data Forecast horizon (n-step ahead forecast) specials Specials currently use. ... Additional arguments forecast method.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.DSHW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast a trained DSHW model — forecast.DSHW","text":"object class fable.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.ELM.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast a trained ELM model — forecast.ELM","title":"Forecast a trained ELM model — forecast.ELM","text":"Forecast trained ELM model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.ELM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast a trained ELM model — forecast.ELM","text":"","code":"# S3 method for class 'ELM' forecast(object, new_data, specials = NULL, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.ELM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast a trained ELM model — forecast.ELM","text":"object object class ELM. new_data Forecast horizon (n-step ahead forecast) specials Specials currently use. ... Additional arguments forecast method.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.ELM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast a trained ELM model — forecast.ELM","text":"object class fable.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.EXPERT.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast a trained EXPERT model — forecast.EXPERT","title":"Forecast a trained EXPERT model — forecast.EXPERT","text":"Forecast trained EXPERT model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.EXPERT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast a trained EXPERT model — forecast.EXPERT","text":"","code":"# S3 method for class 'EXPERT' forecast(object, new_data, specials = NULL, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.EXPERT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast a trained EXPERT model — forecast.EXPERT","text":"object object class EXPERT. new_data Forecast horizon (n-step ahead forecast) specials Specials currently use. ... Additional arguments forecast method.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.EXPERT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast a trained EXPERT model — forecast.EXPERT","text":"object class fable.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.MEDIAN.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast a trained median model — forecast.MEDIAN","title":"Forecast a trained median model — forecast.MEDIAN","text":"Forecast trained median model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.MEDIAN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast a trained median model — forecast.MEDIAN","text":"","code":"# S3 method for class 'MEDIAN' forecast(object, new_data, specials = NULL, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.MEDIAN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast a trained median model — forecast.MEDIAN","text":"object object class MEDIAN. new_data Forecast horizon (n-step ahead forecast) specials Specials currently use. ... Additional arguments forecast method.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.MEDIAN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast a trained median model — forecast.MEDIAN","text":"object class fable.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.MLP.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast a trained MLP model — forecast.MLP","title":"Forecast a trained MLP model — forecast.MLP","text":"Forecast trained MLP model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.MLP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast a trained MLP model — forecast.MLP","text":"","code":"# S3 method for class 'MLP' forecast(object, new_data, specials = NULL, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.MLP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast a trained MLP model — forecast.MLP","text":"object object class MLP. new_data Forecast horizon (n-step ahead forecast) specials Specials currently use. ... Additional arguments forecast method.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.MLP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast a trained MLP model — forecast.MLP","text":"object class fable.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.SMEAN.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast a trained seasonal mean model — forecast.SMEAN","title":"Forecast a trained seasonal mean model — forecast.SMEAN","text":"Forecast trained seasonal mean model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.SMEAN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast a trained seasonal mean model — forecast.SMEAN","text":"","code":"# S3 method for class 'SMEAN' forecast(object, new_data, specials = NULL, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.SMEAN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast a trained seasonal mean model — forecast.SMEAN","text":"object object class SMEAN. new_data Forecast horizon (n-step ahead forecast) specials Specials currently use. ... Additional arguments forecast method.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.SMEAN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast a trained seasonal mean model — forecast.SMEAN","text":"object class fable.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.SMEDIAN.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast a trained seasonal median model — forecast.SMEDIAN","title":"Forecast a trained seasonal median model — forecast.SMEDIAN","text":"Forecast trained seasonal median model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.SMEDIAN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast a trained seasonal median model — forecast.SMEDIAN","text":"","code":"# S3 method for class 'SMEDIAN' forecast(object, new_data, specials = NULL, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.SMEDIAN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast a trained seasonal median model — forecast.SMEDIAN","text":"object object class SMEDIAN. new_data Forecast horizon (n-step ahead forecast) specials Specials currently use. ... Additional arguments forecast method.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.SMEDIAN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast a trained seasonal median model — forecast.SMEDIAN","text":"object class fable.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.SNAIVE2.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast a trained seasonal naive model — forecast.SNAIVE2","title":"Forecast a trained seasonal naive model — forecast.SNAIVE2","text":"Forecast trained seasonal naive model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.SNAIVE2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast a trained seasonal naive model — forecast.SNAIVE2","text":"","code":"# S3 method for class 'SNAIVE2' forecast(object, new_data, specials = NULL, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.SNAIVE2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast a trained seasonal naive model — forecast.SNAIVE2","text":"object object class SNAIVE2. new_data Forecast horizon (n-step ahead forecast) specials Specials currently use. ... Additional arguments forecast method.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.SNAIVE2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast a trained seasonal naive model — forecast.SNAIVE2","text":"object class fable.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.TBATS.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast a trained TBATS model — forecast.TBATS","title":"Forecast a trained TBATS model — forecast.TBATS","text":"Forecast trained TBATS model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.TBATS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast a trained TBATS model — forecast.TBATS","text":"","code":"# S3 method for class 'TBATS' forecast(object, new_data, specials = NULL, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.TBATS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast a trained TBATS model — forecast.TBATS","text":"object object class TBATS. new_data Forecast horizon (n-step ahead forecast) specials Specials currently use. ... Additional arguments forecast method.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/forecast.TBATS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast a trained TBATS model — forecast.TBATS","text":"object class fable.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/glue_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a header from text — glue_header","title":"Create a header from text — glue_header","text":"Create header text glue(). White space  padded \"-\" line length n_char.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/glue_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a header from text — glue_header","text":"","code":"glue_header(text, n_char = 80, ft_bold = FALSE, ft_italic = FALSE)"},{"path":"https://ahaeusser.github.io/tscv/reference/glue_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a header from text — glue_header","text":"text Character value. text header. n_char Integer value. Maximum length header line. ft_bold Logical value. TRUE, text printed bold. ft_italic Logical value. TRUE, text printed italic.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/glue_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a header from text — glue_header","text":"object class glue.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/grapes-out-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Negated value matching — %out%","title":"Negated value matching — %out%","text":"function '","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/grapes-out-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negated value matching — %out%","text":"","code":"x %out% table"},{"path":"https://ahaeusser.github.io/tscv/reference/grapes-out-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negated value matching — %out%","text":"x Values matched. table Values matched .","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/grapes-out-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negated value matching — %out%","text":"Logical vector, indicating non-match located element x","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/initialize_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a plan for train-test split — initialize_split","title":"Initialize a plan for train-test split — initialize_split","text":"function creates initial split training   testing data.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/initialize_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a plan for train-test split — initialize_split","text":"","code":"initialize_split(   main_frame,   context,   type = c(\"first\", \"last\", \"prob\"),   value = NULL )"},{"path":"https://ahaeusser.github.io/tscv/reference/initialize_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a plan for train-test split — initialize_split","text":"main_frame tibble containing time series data. context named list identifiers seried_id, value_id index_id. type type initial split. Possible values \"first\", \"last\", \"prob\". value Numeric value specifying split.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/initialize_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize a plan for train-test split — initialize_split","text":"tibble","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/interpolate_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate missing values — interpolate_missing","title":"Interpolate missing values — interpolate_missing","text":"function interpolate_missing() wrapper   forecast::na.interp(), working numeric vectors.   non-seasonal time series, linear interpolation used   seasonal time series, series decomposed via STL   seasonally adjusted series linearly interpolated seasonal   component added back.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/interpolate_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate missing values — interpolate_missing","text":"","code":"interpolate_missing(x, periods, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/interpolate_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate missing values — interpolate_missing","text":"x Numeric vector. periods Numeric vector. seasonal periods time series. ... arguments passed forecast::msts() forecast::na.interp().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/interpolate_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolate missing values — interpolate_missing","text":"Numeric vector.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/log_platform.html","id":null,"dir":"Reference","previous_headings":"","what":"Create platform info — log_platform","title":"Create platform info — log_platform","text":"Create glue object platform   current R session.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/log_platform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create platform info — log_platform","text":"","code":"log_platform(...)"},{"path":"https://ahaeusser.github.io/tscv/reference/log_platform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create platform info — log_platform","text":"... Arguments passed glue_header().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/log_platform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create platform info — log_platform","text":"object class glue.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/log_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Create string with elapsed time. — log_time","title":"Create string with elapsed time. — log_time","text":"Create glue object elapsed time start   end.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/log_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create string with elapsed time. — log_time","text":"","code":"log_time(text, start = Sys.time(), end = Sys.time(), digits = 1, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/log_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create string with elapsed time. — log_time","text":"text Character value. text header. start Start date time. end End date time. digits Integer value. number digits rounding.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/log_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create string with elapsed time. — log_time","text":"Character value.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/lst_to_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign objects within a list to an environment — lst_to_env","title":"Assign objects within a list to an environment — lst_to_env","text":"lst_to_env helper function assigns   objects within list environment.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/lst_to_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign objects within a list to an environment — lst_to_env","text":"","code":"lst_to_env(x, envir = .GlobalEnv, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/lst_to_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign objects within a list to an environment — lst_to_env","text":"x list containing objects assign. envir environment use (default .GlobalEnv). ... arguments passed assign().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/M4_monthly_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Monthly time series data from the M4 Competition — M4_monthly_data","title":"Monthly time series data from the M4 Competition — M4_monthly_data","text":"data set contains 30 selected time series monthly basis    M4 Competition.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/M4_monthly_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monthly time series data from the M4 Competition — M4_monthly_data","text":"","code":"data(M4_monthly_data)"},{"path":"https://ahaeusser.github.io/tscv/reference/M4_monthly_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Monthly time series data from the M4 Competition — M4_monthly_data","text":"time series object class tibble 7881 rows 4 columns: index: Date time index series: Time series ID M4 forecasting competition category: Category M4 forecasting competition value: Measurement variable","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/M4_monthly_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Monthly time series data from the M4 Competition — M4_monthly_data","text":"M4 Competition","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/M4_monthly_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monthly time series data from the M4 Competition — M4_monthly_data","text":"","code":"data(M4_monthly_data)"},{"path":"https://ahaeusser.github.io/tscv/reference/M4_quarterly_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Quarterly time series data from the M4 Competition — M4_quarterly_data","title":"Quarterly time series data from the M4 Competition — M4_quarterly_data","text":"data set contains 30 selected time series quarterly basis    M4 Competition.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/M4_quarterly_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quarterly time series data from the M4 Competition — M4_quarterly_data","text":"","code":"data(M4_quarterly_data)"},{"path":"https://ahaeusser.github.io/tscv/reference/M4_quarterly_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Quarterly time series data from the M4 Competition — M4_quarterly_data","text":"time series object class tibble 2818 rows 4 columns: index: Date time index series: Time series ID M4 forecasting competition category: Category M4 forecasting competition value: Measurement variable","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/M4_quarterly_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Quarterly time series data from the M4 Competition — M4_quarterly_data","text":"M4 Competition","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/M4_quarterly_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quarterly time series data from the M4 Competition — M4_quarterly_data","text":"","code":"data(M4_quarterly_data)"},{"path":"https://ahaeusser.github.io/tscv/reference/make_accuracy.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate accuracy metrics to evaluate point forecast — make_accuracy","title":"Estimate accuracy metrics to evaluate point forecast — make_accuracy","text":"function estimates several accuracy metrics evaluate   accuracy point forecasts. Either along forecast horizon   along test-splits. default, following accuracy metrics   provided:  : mean error MAE: mean absolute error MSE: mean squared error RMSE: root mean squared error MAPE: mean absolute percentage error sMAPE: scaled mean absolute percentage error MPE: mean percentage error rMAE: relative mean absolute error","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/make_accuracy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate accuracy metrics to evaluate point forecast — make_accuracy","text":"","code":"make_accuracy(   future_frame,   main_frame,   context,   dimension = \"split\",   benchmark = NULL )"},{"path":"https://ahaeusser.github.io/tscv/reference/make_accuracy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate accuracy metrics to evaluate point forecast — make_accuracy","text":"future_frame tibble containing forecasts models, splits, etc. main_frame tibble containing actual values. context named list identifiers seried_id, value_id index_id. dimension Character value. forecast accuracy estimated split horizon. benchmark Character value. forecast model used benchmark relative mean absolute error (rMAE).","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/make_accuracy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate accuracy metrics to evaluate point forecast — make_accuracy","text":"accuracy_frame tibble containing accuracy metrics.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/make_errors.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate forecast errors and percentage errors — make_errors","title":"Calculate forecast errors and percentage errors — make_errors","text":"make_errors calculates forecast errors (error)   percentage forecast errors (pct_error).  series_id: Unique identifier time series specified context. model: Character value. forecasting model. split: Integer value. number train data split. horizon: forecast horizon integer. error: forecast errors numeric value. pct_error: percentage forecast errors numeric value.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/make_errors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate forecast errors and percentage errors — make_errors","text":"","code":"make_errors(future_frame, main_frame, context)"},{"path":"https://ahaeusser.github.io/tscv/reference/make_errors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate forecast errors and percentage errors — make_errors","text":"future_frame tibble containing forecasts models, splits, etc. main_frame tibble containing actual values. context named list identifiers seried_id, value_id index_id.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/make_errors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate forecast errors and percentage errors — make_errors","text":"error_frame tibble forecast errors   percentage forecast errors.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/make_future.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the forecasts from a fable to a future_frame — make_future","title":"Convert the forecasts from a fable to a future_frame — make_future","text":"make_future converts forecasts fable   future_frame. future_frame tibble   standardized format contains columns:  index_id: Date-time index specified context. series_id: Unique identifier time series specified context. model: Character value. forecasting model. split: Integer value. number train data split. horizon: forecast horizon integer. point: point forecast numeric value.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/make_future.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the forecasts from a fable to a future_frame — make_future","text":"","code":"make_future(fable, context)"},{"path":"https://ahaeusser.github.io/tscv/reference/make_future.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the forecasts from a fable to a future_frame — make_future","text":"fable fable created via fabletools::forecast(). context named list identifiers seried_id, value_id index_id.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/make_future.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the forecasts from a fable to a future_frame — make_future","text":"future_frame tibble forecasts.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/make_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a split_frame for train and test splits per time series. — make_split","title":"Create a split_frame for train and test splits per time series. — make_split","text":"function creates split indices train test samples   (.e. partitioning time slices) time series cross-validation.   user can choose stretch slide. first   expanding window approach, latter fixed window approach.   user can define window sizes training testing via   n_init n_ahead, well step size increments   via n_step.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/make_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a split_frame for train and test splits per time series. — make_split","text":"","code":"make_split(   main_frame,   context,   type,   value,   n_ahead,   n_skip = 0,   n_lag = 0,   mode = \"slide\",   exceed = TRUE )"},{"path":"https://ahaeusser.github.io/tscv/reference/make_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a split_frame for train and test splits per time series. — make_split","text":"main_frame tibble containing time series data. context named list identifiers seried_id, value_id index_id. type type initial split. Possible values \"first\", \"last\", \"prob\". value Numeric value specifying split. n_ahead forecast horizon (n-steps-ahead, must positive). n_skip number periods skip windows (must zero positive integer). n_lag value include lag training testing set. useful lagged predictors used training testing. mode Character value. Define setup training window time series cross validation. stretch equivalent expanding window approach slide fixed window approach. exceed Logical value. TRUE, --sample splits exceeding sample size created.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/make_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a split_frame for train and test splits per time series. — make_split","text":"list containing indices train test integer vectors.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/make_tsibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert tibble to tsibble — make_tsibble","title":"Convert tibble to tsibble — make_tsibble","text":"make_tsibble helper function convert   tibble tsibble.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/make_tsibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert tibble to tsibble — make_tsibble","text":"","code":"make_tsibble(main_frame, context)"},{"path":"https://ahaeusser.github.io/tscv/reference/make_tsibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert tibble to tsibble — make_tsibble","text":"main_frame tibble containing time series data. context named list identifiers seried_id, value_id index_id.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/make_tsibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert tibble to tsibble — make_tsibble","text":"main_frame structure , just stored tsibble.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/MEDIAN.html","id":null,"dir":"Reference","previous_headings":"","what":"Median model — MEDIAN","title":"Median model — MEDIAN","text":"Automatic train median model (MEDIAN).","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/MEDIAN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Median model — MEDIAN","text":"","code":"MEDIAN(formula, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/MEDIAN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Median model — MEDIAN","text":"formula Model specification (see \"Specials\" section, currently use ...). ... arguments.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/MEDIAN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Median model — MEDIAN","text":"median_model object class MEDIAN.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/MLP.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic training of MLPs — MLP","title":"Automatic training of MLPs — MLP","text":"Automatic train Multilayer Perceptron (MLPs) model.   function wrapper nnfor::mlp().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/MLP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic training of MLPs — MLP","text":"","code":"MLP(formula, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/MLP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic training of MLPs — MLP","text":"formula Model specification (see \"Specials\" section, currently use...) ... arguments passed nnfor::mlp().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/MLP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic training of MLPs — MLP","text":"mlp_model object class MLP.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.DSHW.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide a succinct summary of a trained DSHW model — model_sum.DSHW","title":"Provide a succinct summary of a trained DSHW model — model_sum.DSHW","text":"Provide succinct summary trained DSHW model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.DSHW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide a succinct summary of a trained DSHW model — model_sum.DSHW","text":"","code":"# S3 method for class 'DSHW' model_sum(object)"},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.DSHW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide a succinct summary of a trained DSHW model — model_sum.DSHW","text":"object object class DSHW.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.DSHW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide a succinct summary of a trained DSHW model — model_sum.DSHW","text":"Model summary character value.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.ELM.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide a succinct summary of a trained ELM model — model_sum.ELM","title":"Provide a succinct summary of a trained ELM model — model_sum.ELM","text":"Provide succinct summary trained ELM model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.ELM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide a succinct summary of a trained ELM model — model_sum.ELM","text":"","code":"# S3 method for class 'ELM' model_sum(object)"},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.ELM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide a succinct summary of a trained ELM model — model_sum.ELM","text":"object object class ELM.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.ELM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide a succinct summary of a trained ELM model — model_sum.ELM","text":"Model summary character value.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.EXPERT.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide a succinct summary of a trained EXPERT model — model_sum.EXPERT","title":"Provide a succinct summary of a trained EXPERT model — model_sum.EXPERT","text":"Provide succinct summary trained EXPERT model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.EXPERT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide a succinct summary of a trained EXPERT model — model_sum.EXPERT","text":"","code":"# S3 method for class 'EXPERT' model_sum(object)"},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.EXPERT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide a succinct summary of a trained EXPERT model — model_sum.EXPERT","text":"object object class EXPERT.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.EXPERT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide a succinct summary of a trained EXPERT model — model_sum.EXPERT","text":"Model summary character value.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.MEDIAN.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide a succinct summary of a trained median model — model_sum.MEDIAN","title":"Provide a succinct summary of a trained median model — model_sum.MEDIAN","text":"Provide succinct summary trained median model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.MEDIAN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide a succinct summary of a trained median model — model_sum.MEDIAN","text":"","code":"# S3 method for class 'MEDIAN' model_sum(object)"},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.MEDIAN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide a succinct summary of a trained median model — model_sum.MEDIAN","text":"object object class MEDIAN.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.MEDIAN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide a succinct summary of a trained median model — model_sum.MEDIAN","text":"Model summary character value.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.MLP.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide a succinct summary of a trained MLP model — model_sum.MLP","title":"Provide a succinct summary of a trained MLP model — model_sum.MLP","text":"Provide succinct summary trained MLP model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.MLP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide a succinct summary of a trained MLP model — model_sum.MLP","text":"","code":"# S3 method for class 'MLP' model_sum(object)"},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.MLP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide a succinct summary of a trained MLP model — model_sum.MLP","text":"object object class MLP.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.MLP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide a succinct summary of a trained MLP model — model_sum.MLP","text":"Model summary character value.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.SMEAN.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide a succinct summary of a trained seasonal mean model — model_sum.SMEAN","title":"Provide a succinct summary of a trained seasonal mean model — model_sum.SMEAN","text":"Provide succinct summary trained seasonal mean model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.SMEAN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide a succinct summary of a trained seasonal mean model — model_sum.SMEAN","text":"","code":"# S3 method for class 'SMEAN' model_sum(object)"},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.SMEAN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide a succinct summary of a trained seasonal mean model — model_sum.SMEAN","text":"object object class SMEAN.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.SMEAN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide a succinct summary of a trained seasonal mean model — model_sum.SMEAN","text":"Model summary character value.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.SMEDIAN.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide a succinct summary of a trained seasonal median model — model_sum.SMEDIAN","title":"Provide a succinct summary of a trained seasonal median model — model_sum.SMEDIAN","text":"Provide succinct summary trained seasonal median model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.SMEDIAN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide a succinct summary of a trained seasonal median model — model_sum.SMEDIAN","text":"","code":"# S3 method for class 'SMEDIAN' model_sum(object)"},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.SMEDIAN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide a succinct summary of a trained seasonal median model — model_sum.SMEDIAN","text":"object object class SMEDIAN.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.SMEDIAN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide a succinct summary of a trained seasonal median model — model_sum.SMEDIAN","text":"Model summary character value.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.SNAIVE2.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide a succinct summary of a trained seasonal naive model — model_sum.SNAIVE2","title":"Provide a succinct summary of a trained seasonal naive model — model_sum.SNAIVE2","text":"Provide succinct summary trained seasonal naive model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.SNAIVE2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide a succinct summary of a trained seasonal naive model — model_sum.SNAIVE2","text":"","code":"# S3 method for class 'SNAIVE2' model_sum(object)"},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.SNAIVE2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide a succinct summary of a trained seasonal naive model — model_sum.SNAIVE2","text":"object object class SNAIVE2.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.SNAIVE2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide a succinct summary of a trained seasonal naive model — model_sum.SNAIVE2","text":"Model summary character value.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.TBATS.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide a succinct summary of a trained TBATS model — model_sum.TBATS","title":"Provide a succinct summary of a trained TBATS model — model_sum.TBATS","text":"Provide succinct summary trained TBATS model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.TBATS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide a succinct summary of a trained TBATS model — model_sum.TBATS","text":"","code":"# S3 method for class 'TBATS' model_sum(object)"},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.TBATS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide a succinct summary of a trained TBATS model — model_sum.TBATS","text":"object object class TBATS.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/model_sum.TBATS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide a succinct summary of a trained TBATS model — model_sum.TBATS","text":"Model summary character value.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/number_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to create numbered strings. — number_string","title":"Helper function to create numbered strings. — number_string","text":"Creates character vector form   c(\"x(1)\", x(2), ..., x(n)).","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/number_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to create numbered strings. — number_string","text":"","code":"number_string(x, n)"},{"path":"https://ahaeusser.github.io/tscv/reference/number_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to create numbered strings. — number_string","text":"x Character value. n Integer value.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/number_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to create numbered strings. — number_string","text":"x Character vector.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/pacf_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the sample partial autocorrelation of a numeric vector — pacf_vec","title":"Estimate the sample partial autocorrelation of a numeric vector — pacf_vec","text":"acf_vec estimates sample partial autocorrelation   function numeric vector.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/pacf_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the sample partial autocorrelation of a numeric vector — pacf_vec","text":"","code":"pacf_vec(x, lag_max = 24, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/pacf_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the sample partial autocorrelation of a numeric vector — pacf_vec","text":"x Numeric vector. lag_max Maximum lag integer. ... arguments passed stats::acf().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/pacf_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the sample partial autocorrelation of a numeric vector — pacf_vec","text":"x Numeric vector.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/plot_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot data as bar chart — plot_bar","title":"Plot data as bar chart — plot_bar","text":"Plot one variables bar chart.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/plot_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot data as bar chart — plot_bar","text":"","code":"plot_bar(   data,   x,   y,   position = \"dodge\",   facet_var = NULL,   facet_scale = \"free\",   facet_nrow = NULL,   facet_ncol = NULL,   color = NULL,   flip = FALSE,   reorder = FALSE,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   caption = NULL,   bar_size = 0.75,   bar_color = \"grey35\",   bar_alpha = 1,   theme_set = theme_tscv(),   theme_config = list(),   ... )"},{"path":"https://ahaeusser.github.io/tscv/reference/plot_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot data as bar chart — plot_bar","text":"data data.frame, tibble tsibble long format. x Unquoted column within .data. y Unquoted column within .data containing numeric values. position Character value. Possible values \"stack} \\code{\"dodge. facet_var Unquoted column within .data (facet). facet_scale Character value defining axis scaling. Possible values \"free\", \"fixed\", \"free_x\" \"free_y\". facet_nrow Integer value. number rows. facet_ncol Integer value. number columns. color Unquoted column within .data (color). flip Logical value. TRUE, plot flipped horizontal vertical. reorder Logical value. TRUE, values reordered within facet. title Title plot. subtitle Subtitle plot. xlab Label x-axis. ylab Label y-axis. caption Caption plot. bar_size Numeric value defining line width. bar_color Character value defining line color (ignored color present). bar_alpha Numeric value defining transparency line. theme_set complete ggplot2 theme. theme_config list arguments passed ggplot2::theme(). ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/plot_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot data as bar chart — plot_bar","text":"p object class ggplot.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/plot_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the density via Kernel Density Estimator — plot_density","title":"Plot the density via Kernel Density Estimator — plot_density","text":"Plot density one time series via Kernel Density Estimator.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/plot_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the density via Kernel Density Estimator — plot_density","text":"","code":"plot_density(   data,   x,   facet_var = NULL,   facet_scale = \"free\",   facet_nrow = NULL,   facet_ncol = NULL,   color = NULL,   fill = NULL,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   caption = NULL,   line_width = 0.1,   line_type = \"solid\",   line_color = \"grey35\",   fill_color = \"grey35\",   fill_alpha = 0.5,   theme_set = theme_tscv(),   theme_config = list(),   ... )"},{"path":"https://ahaeusser.github.io/tscv/reference/plot_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the density via Kernel Density Estimator — plot_density","text":"data data.frame, tibble tsibble long format. x Unquoted column within .data containing numeric values. facet_var Unquoted column within .data (facet). facet_scale Character value defining axis scaling (facet_var = \"free\" facet_var = \"fixed\"). facet_nrow Integer value. number rows. facet_ncol Integer value. number columns. color Unquoted column within .data (color). fill Unquoted column within .data (fill color). title Title plot. subtitle Subtitle plot. xlab Label x-axis. ylab Label y-axis. caption Caption plot. line_width Numeric value defining line width kernel density estimator. line_type Integer value defining line type kernel density estimator. line_color Character value defining line color kernel density estimator. fill_color Character value defining fill color area kernel density estimator. fill_alpha Numeric value defining transparency area kernel density estimator. theme_set complete ggplot2 theme. theme_config list arguments passed ggplot2::theme(). ... arguments passed geom_density().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/plot_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the density via Kernel Density Estimator — plot_density","text":"p object class ggplot.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/plot_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot data as histogram — plot_histogram","title":"Plot data as histogram — plot_histogram","text":"Plot one variables histogram.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/plot_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot data as histogram — plot_histogram","text":"","code":"plot_histogram(   data,   x,   facet_var = NULL,   facet_scale = \"free\",   facet_nrow = NULL,   facet_ncol = NULL,   color = NULL,   fill = NULL,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   caption = NULL,   line_color = \"grey35\",   line_width = 0.5,   fill_color = \"grey35\",   fill_alpha = 1,   theme_set = theme_tscv(),   theme_config = list(),   ... )"},{"path":"https://ahaeusser.github.io/tscv/reference/plot_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot data as histogram — plot_histogram","text":"data data.frame, tibble tsibble long format. x Unquoted column within .data containing numeric values. facet_var Unquoted column within .data (facet). facet_scale Character value defining axis scaling (facet_var = \"free\" facet_var = \"fixed\"). facet_nrow Integer value. number rows. facet_ncol Integer value. number columns. color Unquoted column within .data (color). fill Unquoted column within .data (fill color). title Title plot. subtitle Subtitle plot. xlab Label x-axis. ylab Label y-axis. caption Caption plot. line_color Character value defining outline color histogram bars. line_width Numeric value defining outline width histogram bars. fill_color Character value defining color histogram bars. fill_alpha Numeric value defining transparency histogram bars. theme_set complete ggplot2 theme. theme_config list arguments passed ggplot2::theme(). ... arguments passed ggplot2::geom_histogram().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/plot_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot data as histogram — plot_histogram","text":"p object class ggplot.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/plot_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot data as line chart — plot_line","title":"Plot data as line chart — plot_line","text":"Plot one variables line chart.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/plot_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot data as line chart — plot_line","text":"","code":"plot_line(   data,   x,   y,   facet_var = NULL,   facet_scale = \"free\",   facet_nrow = NULL,   facet_ncol = NULL,   color = NULL,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   caption = NULL,   line_size = 0.75,   line_type = \"solid\",   line_color = \"grey35\",   line_alpha = 1,   theme_set = theme_tscv(),   theme_config = list(),   ... )"},{"path":"https://ahaeusser.github.io/tscv/reference/plot_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot data as line chart — plot_line","text":"data data.frame, tibble tsibble long format. x Unquoted column within .data. y Unquoted column within .data containing numeric values. facet_var Unquoted column within .data (facet). facet_scale Character value defining axis scaling (facet_var = \"free\" facet_var = \"fixed\"). facet_nrow Integer value. number rows. facet_ncol Integer value. number columns. color Unquoted column within .data (color). title Title plot. subtitle Subtitle plot. xlab Label x-axis. ylab Label y-axis. caption Caption plot. line_size Numeric value defining line width. line_type Numeric value defining line type. line_color Character value defining line color (ignored color present). line_alpha Numeric value defining transparency line. theme_set complete ggplot2 theme. theme_config list arguments passed ggplot2::theme(). ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/plot_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot data as line chart — plot_line","text":"p object class ggplot.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/plot_point.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot data as scatterplot — plot_point","title":"Plot data as scatterplot — plot_point","text":"Plot one variables scatterplot.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/plot_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot data as scatterplot — plot_point","text":"","code":"plot_point(   data,   x,   y,   facet_var = NULL,   facet_scale = \"free\",   facet_nrow = NULL,   facet_ncol = NULL,   color = NULL,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   caption = NULL,   point_size = 1.5,   point_type = 16,   point_color = \"grey35\",   point_alpha = 1,   theme_set = theme_tscv(),   theme_config = list(),   ... )"},{"path":"https://ahaeusser.github.io/tscv/reference/plot_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot data as scatterplot — plot_point","text":"data data.frame, tibble tsibble long format. x Unquoted column within .data. y Unquoted column within .data containing numeric values. facet_var Unquoted column within .data (facet). facet_scale Character value defining axis scaling (facet_var = \"free\" facet_var = \"fixed\"). facet_nrow Integer value. number rows. facet_ncol Integer value. number columns. color Unquoted column within .data (color). title Title plot. subtitle Subtitle plot. xlab Label x-axis. ylab Label y-axis. caption Caption plot. point_size Numeric value defining point size. point_type Numeric value defining point type. point_color Character value defining point color (ignored color present). point_alpha Numeric value defining transparency points. theme_set complete ggplot2 theme. theme_config list arguments passed ggplot2::theme(). ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/plot_point.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot data as scatterplot — plot_point","text":"p object class ggplot.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/plot_qq.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile-Quantile plot — plot_qq","title":"Quantile-Quantile plot — plot_qq","text":"Quantile-Quantile plot one time series.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/plot_qq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantile-Quantile plot — plot_qq","text":"","code":"plot_qq(   data,   x,   facet_var = NULL,   facet_scale = \"free\",   facet_nrow = NULL,   facet_ncol = NULL,   color = NULL,   title = NULL,   subtitle = NULL,   xlab = NULL,   ylab = NULL,   caption = NULL,   point_size = 2,   point_shape = 16,   point_color = \"grey35\",   point_fill = \"grey35\",   point_alpha = 0.25,   line_width = 0.25,   line_type = \"solid\",   line_color = \"grey35\",   line_alpha = 1,   band_color = \"grey35\",   band_alpha = 0.25,   theme_set = theme_tscv(),   theme_config = list(),   ... )"},{"path":"https://ahaeusser.github.io/tscv/reference/plot_qq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantile-Quantile plot — plot_qq","text":"data data.frame, tibble tsibble long format. x Unquoted column within .data containing numeric values. facet_var Unquoted column within .data (facet). facet_scale Character value defining axis scaling (facet_var = \"free\" facet_var = \"fixed\"). facet_nrow Integer value. number rows. facet_ncol Integer value. number columns. color Unquoted column within .data (color). title Title plot. subtitle Subtitle plot. xlab Label x-axis. ylab Label y-axis. caption Caption plot. point_size Numeric value defining point size. point_shape Integer value defining point shape. point_color Character value defining point color (ignored color present). point_fill Character value defining fill color (ignored color present). point_alpha Numeric value defining transparency points. line_width Numeric value defining line width (45-degree line). line_type Integer value defining line type (45-degree line). line_color Character value defining line color (45-degree line). line_alpha Numeric value defining transparency line. band_color Character value defining fill color confidence bands. band_alpha Numeric value defining transparency confidence bands. theme_set complete ggplot2 theme. theme_config list arguments passed ggplot2::theme(). ... arguments passed qqplotr::stat_qq_point(), qqplotr::stat_qq_line(), qqplotr::stat_qq_band().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/plot_qq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantile-Quantile plot — plot_qq","text":"p object class ggplot.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.DSHW.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract residuals from a trained DSHW model — residuals.DSHW","title":"Extract residuals from a trained DSHW model — residuals.DSHW","text":"Extract residuals trained DSHW model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.DSHW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract residuals from a trained DSHW model — residuals.DSHW","text":"","code":"# S3 method for class 'DSHW' residuals(object, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.DSHW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract residuals from a trained DSHW model — residuals.DSHW","text":"object object class DSHW. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.DSHW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract residuals from a trained DSHW model — residuals.DSHW","text":"Residuals tsibble.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.ELM.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract residuals from a trained ELM model — residuals.ELM","title":"Extract residuals from a trained ELM model — residuals.ELM","text":"Extract residuals trained ELM model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.ELM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract residuals from a trained ELM model — residuals.ELM","text":"","code":"# S3 method for class 'ELM' residuals(object, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.ELM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract residuals from a trained ELM model — residuals.ELM","text":"object object class ELM. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.ELM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract residuals from a trained ELM model — residuals.ELM","text":"Fitted values tsibble.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.EXPERT.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract residuals from a trained EXPERT model — residuals.EXPERT","title":"Extract residuals from a trained EXPERT model — residuals.EXPERT","text":"Extract residuals trained EXPERT model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.EXPERT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract residuals from a trained EXPERT model — residuals.EXPERT","text":"","code":"# S3 method for class 'EXPERT' residuals(object, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.EXPERT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract residuals from a trained EXPERT model — residuals.EXPERT","text":"object object class EXPERT. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.EXPERT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract residuals from a trained EXPERT model — residuals.EXPERT","text":"Fitted values tsibble.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.MEDIAN.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract residuals from a trained median model — residuals.MEDIAN","title":"Extract residuals from a trained median model — residuals.MEDIAN","text":"Extract residuals trained median model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.MEDIAN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract residuals from a trained median model — residuals.MEDIAN","text":"","code":"# S3 method for class 'MEDIAN' residuals(object, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.MEDIAN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract residuals from a trained median model — residuals.MEDIAN","text":"object object class MEDIAN. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.MEDIAN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract residuals from a trained median model — residuals.MEDIAN","text":"Fitted values tsibble.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.MLP.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract residuals from a trained MLP model — residuals.MLP","title":"Extract residuals from a trained MLP model — residuals.MLP","text":"Extract residuals trained MLP model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.MLP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract residuals from a trained MLP model — residuals.MLP","text":"","code":"# S3 method for class 'MLP' residuals(object, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.MLP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract residuals from a trained MLP model — residuals.MLP","text":"object object class MLP. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.MLP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract residuals from a trained MLP model — residuals.MLP","text":"Fitted values tsibble.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.SMEAN.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract residuals from a trained seasonal mean model — residuals.SMEAN","title":"Extract residuals from a trained seasonal mean model — residuals.SMEAN","text":"Extract residuals trained seasonal mean model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.SMEAN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract residuals from a trained seasonal mean model — residuals.SMEAN","text":"","code":"# S3 method for class 'SMEAN' residuals(object, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.SMEAN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract residuals from a trained seasonal mean model — residuals.SMEAN","text":"object object class SMEAN. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.SMEAN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract residuals from a trained seasonal mean model — residuals.SMEAN","text":"Fitted values tsibble.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.SMEDIAN.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract residuals from a trained seasonal median model — residuals.SMEDIAN","title":"Extract residuals from a trained seasonal median model — residuals.SMEDIAN","text":"Extract residuals trained seasonal median model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.SMEDIAN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract residuals from a trained seasonal median model — residuals.SMEDIAN","text":"","code":"# S3 method for class 'SMEDIAN' residuals(object, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.SMEDIAN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract residuals from a trained seasonal median model — residuals.SMEDIAN","text":"object object class SMEDIAN. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.SMEDIAN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract residuals from a trained seasonal median model — residuals.SMEDIAN","text":"Fitted values tsibble.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.SNAIVE2.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract residuals from a trained seasonal naive model — residuals.SNAIVE2","title":"Extract residuals from a trained seasonal naive model — residuals.SNAIVE2","text":"Extract residuals trained seasonal naive model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.SNAIVE2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract residuals from a trained seasonal naive model — residuals.SNAIVE2","text":"","code":"# S3 method for class 'SNAIVE2' residuals(object, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.SNAIVE2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract residuals from a trained seasonal naive model — residuals.SNAIVE2","text":"object object class SNAIVE2. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.SNAIVE2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract residuals from a trained seasonal naive model — residuals.SNAIVE2","text":"Fitted values tsibble.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.TBATS.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract residuals from a trained TBATS model — residuals.TBATS","title":"Extract residuals from a trained TBATS model — residuals.TBATS","text":"Extract residuals trained TBATS model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.TBATS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract residuals from a trained TBATS model — residuals.TBATS","text":"","code":"# S3 method for class 'TBATS' residuals(object, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.TBATS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract residuals from a trained TBATS model — residuals.TBATS","text":"object object class TBATS. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/residuals.TBATS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract residuals from a trained TBATS model — residuals.TBATS","text":"Fitted values tsibble.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/scale_color_tscv.html","id":null,"dir":"Reference","previous_headings":"","what":"Color scale constructor for tscv colors. — scale_color_tscv","title":"Color scale constructor for tscv colors. — scale_color_tscv","text":"Color scale constructor tscv colors.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/scale_color_tscv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color scale constructor for tscv colors. — scale_color_tscv","text":"","code":"scale_color_tscv(palette = \"main\", discrete = TRUE, reverse = FALSE, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/scale_color_tscv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color scale constructor for tscv colors. — scale_color_tscv","text":"palette Character value. name palette tscv_palettes. discrete Logical value indicating whether color aesthetic discrete . reverse Logical value indicating whether palette reversed. ... Additional arguments passed discrete_scale() scale_color_gradientn().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/scale_fill_tscv.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill scale constructor for tscv colors. — scale_fill_tscv","title":"Fill scale constructor for tscv colors. — scale_fill_tscv","text":"Fill scale constructor tscv colors.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/scale_fill_tscv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill scale constructor for tscv colors. — scale_fill_tscv","text":"","code":"scale_fill_tscv(palette = \"main\", discrete = TRUE, reverse = FALSE, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/scale_fill_tscv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill scale constructor for tscv colors. — scale_fill_tscv","text":"palette Character value. name palette tscv_palettes. discrete Logical value indicating whether color aesthetic discrete . reverse Logical value indicating whether palette reversed. ... Additional arguments passed discrete_scale() scale_fill_gradientn().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/slice_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Slice the test data from the complete data — slice_test","title":"Slice the test data from the complete data — slice_test","text":"slice_test creates test data   complete data set main_frame according split_frame.   columns main_frame, number split added   integer.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/slice_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slice the test data from the complete data — slice_test","text":"","code":"slice_test(main_frame, split_frame, context)"},{"path":"https://ahaeusser.github.io/tscv/reference/slice_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slice the test data from the complete data — slice_test","text":"main_frame tibble containing time series data. split_frame tibble containing splits train test. result call make_split(). context named list identifiers seried_id, value_id index_id.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/slice_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Slice the test data from the complete data — slice_test","text":"test_frame tibble containing test data.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/slice_train.html","id":null,"dir":"Reference","previous_headings":"","what":"Slice the train data from the complete data — slice_train","title":"Slice the train data from the complete data — slice_train","text":"slice_train creates train data   complete data set main_frame according split_frame.   columns main_frame, number split added   integer.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/slice_train.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slice the train data from the complete data — slice_train","text":"","code":"slice_train(main_frame, split_frame, context)"},{"path":"https://ahaeusser.github.io/tscv/reference/slice_train.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slice the train data from the complete data — slice_train","text":"main_frame tibble containing time series data. split_frame tibble containing splits train test. result call make_split(). context named list identifiers seried_id, value_id index_id.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/slice_train.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Slice the train data from the complete data — slice_train","text":"train_frame tibble containing train data.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/SMEAN.html","id":null,"dir":"Reference","previous_headings":"","what":"Seasonal mean model — SMEAN","title":"Seasonal mean model — SMEAN","text":"Automatic train seasonal mean model (SMEAN).   equivalent linear regression seasonal dummy variables ,   .e. TSLM(value ~ season()).","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/SMEAN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seasonal mean model — SMEAN","text":"","code":"SMEAN(formula, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/SMEAN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seasonal mean model — SMEAN","text":"formula Model specification (see \"Specials\" section, currently use ...). ... arguments.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/SMEAN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seasonal mean model — SMEAN","text":"smean_model object class SMEAN.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/SMEDIAN.html","id":null,"dir":"Reference","previous_headings":"","what":"Seasonal median model — SMEDIAN","title":"Seasonal median model — SMEDIAN","text":"Automatic train seasonal median model (SMEDIAN).","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/SMEDIAN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seasonal median model — SMEDIAN","text":"","code":"SMEDIAN(formula, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/SMEDIAN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seasonal median model — SMEDIAN","text":"formula Model specification (see \"Specials\" section, currently use ...). ... arguments.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/SMEDIAN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seasonal median model — SMEDIAN","text":"smedian_model object class SMEDIAN.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/smooth_outlier.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify and replace outliers — smooth_outlier","title":"Identify and replace outliers — smooth_outlier","text":"function smooth_outlier() wrapper   forecast::tsoutliers(), working numeric vectors.   non-seasonal time series, supsmu method used. seasonal   time series, series decomposed via STL IQR method   used remainder component. Values outside range   linear interpolated remainder series reconstructed   corrected remainder component.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/smooth_outlier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify and replace outliers — smooth_outlier","text":"","code":"smooth_outlier(x, periods, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/smooth_outlier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify and replace outliers — smooth_outlier","text":"x Numeric vector. periods Numeric vector. seasonal periods time series. ... arguments passed forecast::msts() forecast::tsoutliers().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/smooth_outlier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify and replace outliers — smooth_outlier","text":"Numeric vector.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/SNAIVE2.html","id":null,"dir":"Reference","previous_headings":"","what":"Seasonal naive model — SNAIVE2","title":"Seasonal naive model — SNAIVE2","text":"Automatic train seasonal naive model (SNAIVE2)..","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/SNAIVE2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seasonal naive model — SNAIVE2","text":"","code":"SNAIVE2(formula, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/SNAIVE2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seasonal naive model — SNAIVE2","text":"formula Model specification (see \"Specials\" section, currently use ...). ... arguments.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/SNAIVE2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seasonal naive model — SNAIVE2","text":"snaive2_model object class SNAIVE2.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/split_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Create indices for train and test splits. — split_index","title":"Create indices for train and test splits. — split_index","text":"function creates split indices train test samples   (.e. partitioning time slices) time series cross-validation.   user can choose stretch slide. first   expanding window approach, latter fixed window approach.   user can define window sizes training testing via   n_init n_ahead, well step size increments   via n_step.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/split_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create indices for train and test splits. — split_index","text":"","code":"split_index(   n_total,   n_init,   n_ahead,   n_skip = 0,   n_lag = 0,   mode = \"slide\",   exceed = FALSE )"},{"path":"https://ahaeusser.github.io/tscv/reference/split_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create indices for train and test splits. — split_index","text":"n_total total number observations time series. n_init number periods initial training window (must positive). n_ahead forecast horizon (n-steps-ahead, must positive). n_skip number periods skip windows (must zero positive integer). n_lag value include lag training testing set. useful lagged predictors used training testing. mode Character value. Define setup training window time series cross validation. stretch equivalent expanding window approach slide fixed window approach. exceed Logical value. TRUE, --sample splits exceeding sample size created.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/split_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create indices for train and test splits. — split_index","text":"list containing indices train test integer vectors.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/summarise_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary statistics for time series data — summarise_data","title":"Summary statistics for time series data — summarise_data","text":"function calculates several summary statistics time series data.    function calculates following metrics key combinations:  start: Start date (date-time) end: End date (date-time) n_obs: Number observations per time series n_missing: Number missing values (NAs) pct_missing: Percentage rate missing values n_zeros: Number zero values pct_zeros: Percentage rate zero values","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/summarise_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary statistics for time series data — summarise_data","text":"","code":"summarise_data(.data, context)"},{"path":"https://ahaeusser.github.io/tscv/reference/summarise_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary statistics for time series data — summarise_data","text":".data tibble long format containing time series data. context named list identifiers seried_id, value_id index_id.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/summarise_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary statistics for time series data — summarise_data","text":"data tibble containing summary statistics.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/summarise_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary table of the splitting into training and testing — summarise_split","title":"Summary table of the splitting into training and testing — summarise_split","text":"functions provides summary table splitting   training testing data giving start end date train-test   sample corresponding index integer.. means, function   applied result call split_data(...).  slice: Time slice dates_train: Date (date-time) range training data dates_test: Date (date-time) range testing data index_train: Index range training data index_test: Index range testing data","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/summarise_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary table of the splitting into training and testing — summarise_split","text":"","code":"summarise_split(data)"},{"path":"https://ahaeusser.github.io/tscv/reference/summarise_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary table of the splitting into training and testing — summarise_split","text":"data valid tsibble long format one measurement variable multiple keys. One keys must slice.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/summarise_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary table of the splitting into training and testing — summarise_split","text":"split_tbl tibble containing summarized values.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/summarise_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary statistics for time series data — summarise_stats","title":"Summary statistics for time series data — summarise_stats","text":"function calculates several summary statistics time series data.    function calculates following metrics key combinations:  mean: Arithmetic mean median: Median (p50) mode: Mode sd: Standard deviation p0: Minimum p25: 25%-Quantile p75: 75%-Quantile p100: Maximum skewness: Skewness kurtosis: Kurtosis","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/summarise_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary statistics for time series data — summarise_stats","text":"","code":"summarise_stats(.data, context)"},{"path":"https://ahaeusser.github.io/tscv/reference/summarise_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary statistics for time series data — summarise_stats","text":".data tibble long format containing time series data. context named list identifiers seried_id, value_id index_id.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/summarise_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary statistics for time series data — summarise_stats","text":"data tibble containing summary statistics.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/TBATS.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic train a TBATS model — TBATS","title":"Automatic train a TBATS model — TBATS","text":"Automatic train TBATS model (Trigonometric seasonality, Box-Cox transformation,    ARMA errors, Trend Seasonal components). function wrapper forecast::tbats().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/TBATS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic train a TBATS model — TBATS","text":"","code":"TBATS(formula, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/TBATS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic train a TBATS model — TBATS","text":"formula Model specification (see \"Specials\" section, currently use ...) ... arguments passed forecast::tbats().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/TBATS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic train a TBATS model — TBATS","text":"tbats_model object class TBATS.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/theme_tscv.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom ggplot2 theme for tscv package — theme_tscv","title":"Custom ggplot2 theme for tscv package — theme_tscv","text":"Custom ggplot2 theme tscv package.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/theme_tscv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom ggplot2 theme for tscv package — theme_tscv","text":"","code":"theme_tscv(   base_size = 11,   base_family = \"\",   base_line_size = base_size/22,   base_rect_size = base_size/22 )"},{"path":"https://ahaeusser.github.io/tscv/reference/theme_tscv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom ggplot2 theme for tscv package — theme_tscv","text":"base_size Base font size. base_family Base font family. base_line_size Base size \"line\" elements. base_rect_size Base size \"rect\" elements.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/theme_tscv_dark.html","id":null,"dir":"Reference","previous_headings":"","what":"Dark ggplot2 theme for tscv package — theme_tscv_dark","title":"Dark ggplot2 theme for tscv package — theme_tscv_dark","text":"Custom ggplot2 theme tscv package.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/theme_tscv_dark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dark ggplot2 theme for tscv package — theme_tscv_dark","text":"","code":"theme_tscv_dark(   base_size = 11,   base_family = \"\",   base_line_size = base_size/22,   base_rect_size = base_size/22 )"},{"path":"https://ahaeusser.github.io/tscv/reference/theme_tscv_dark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dark ggplot2 theme for tscv package — theme_tscv_dark","text":"base_size Base font size. base_family Base font family. base_line_size Base size \"line\" elements. base_rect_size Base size \"rect\" elements.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_dshw.html","id":null,"dir":"Reference","previous_headings":"","what":"Double Seasonal Holt-Winters model — train_dshw","title":"Double Seasonal Holt-Winters model — train_dshw","text":"Train Double Seasonal Holt-Winters model (DSHW).","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_dshw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Double Seasonal Holt-Winters model — train_dshw","text":"","code":"train_dshw(.data, specials, periods, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/train_dshw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Double Seasonal Holt-Winters model — train_dshw","text":".data Input data tsibble. specials Specials list defined specials_dshw. periods Integer vector. periodicity time series (e.g. periods = c(24, 168) hourly data). ... arguments passed forecast::dshw().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_dshw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Double Seasonal Holt-Winters model — train_dshw","text":"object class DSHW.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_elm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extreme Learning Machine (ELM) — train_elm","title":"Extreme Learning Machine (ELM) — train_elm","text":"Train Extreme Learning Machine (ELM) model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_elm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extreme Learning Machine (ELM) — train_elm","text":"","code":"train_elm(.data, specials, n_seed = 42, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/train_elm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extreme Learning Machine (ELM) — train_elm","text":".data Input data tsibble. specials Specials list defined specials_elm. n_seed Integer value. seed random number generator (reproducibility). ... arguments passed nnfor::elm().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_elm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extreme Learning Machine (ELM) — train_elm","text":"object class ELM.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_expert.html","id":null,"dir":"Reference","previous_headings":"","what":"EXPERT model — train_expert","title":"EXPERT model — train_expert","text":"Train EXPERT model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_expert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EXPERT model — train_expert","text":"","code":"train_expert(.data, specials = NULL, periods, xreg = NULL, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/train_expert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EXPERT model — train_expert","text":".data Input data tsibble. specials Specials list defined specials_expert. periods Integer vector. periodicity time series (e.g. periods = c(24, 168) hourly data). xreg tsibble containing exogenous variables. ... arguments (currently use).","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_expert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EXPERT model — train_expert","text":"object class EXPERT.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_median.html","id":null,"dir":"Reference","previous_headings":"","what":"Median model — train_median","title":"Median model — train_median","text":"Train median model (MEDIAN).","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_median.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Median model — train_median","text":"","code":"train_median(.data, specials, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/train_median.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Median model — train_median","text":".data Input data tsibble. specials Specials list defined specials_median. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_median.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Median model — train_median","text":"object class MEDIAN.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_mlp.html","id":null,"dir":"Reference","previous_headings":"","what":"Multilayer Perceptron (MLP) — train_mlp","title":"Multilayer Perceptron (MLP) — train_mlp","text":"Train Multilayer Perceptron (MLP) model.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_mlp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multilayer Perceptron (MLP) — train_mlp","text":"","code":"train_mlp(.data, specials, n_seed = 42, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/train_mlp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multilayer Perceptron (MLP) — train_mlp","text":".data Input data tsibble. specials Specials list defined specials_mlp. n_seed Integer value. seed random number generator (reproducibility). ... arguments passed nnfor::mlp().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_mlp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multilayer Perceptron (MLP) — train_mlp","text":"object class MLP.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_smean.html","id":null,"dir":"Reference","previous_headings":"","what":"Seasonal mean model — train_smean","title":"Seasonal mean model — train_smean","text":"Train seasonal mean model (SMEAN). equivalent   linear regression seasonal dummy variables , .e.   TSLM(value ~ season()).","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_smean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seasonal mean model — train_smean","text":"","code":"train_smean(.data, specials, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/train_smean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seasonal mean model — train_smean","text":".data Input data tsibble. specials Specials list defined specials_smean. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_smean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seasonal mean model — train_smean","text":"object class SMEAN.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_smedian.html","id":null,"dir":"Reference","previous_headings":"","what":"Seasonal median model — train_smedian","title":"Seasonal median model — train_smedian","text":"Train seasonal median model (SMEDIAN).","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_smedian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seasonal median model — train_smedian","text":"","code":"train_smedian(.data, specials, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/train_smedian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seasonal median model — train_smedian","text":".data Input data tsibble. specials Specials list defined specials_smedian. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_smedian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seasonal median model — train_smedian","text":"object class SMEDIAN.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_snaive2.html","id":null,"dir":"Reference","previous_headings":"","what":"Seasonal naive model — train_snaive2","title":"Seasonal naive model — train_snaive2","text":"Train seasonal naive model (SNAIVE2).","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_snaive2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seasonal naive model — train_snaive2","text":"","code":"train_snaive2(.data, specials, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/train_snaive2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seasonal naive model — train_snaive2","text":".data Input data tsibble. specials Specials list defined specials_snaive2. ... Currently use.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_snaive2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seasonal naive model — train_snaive2","text":"object class SNAIVE2.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_tbats.html","id":null,"dir":"Reference","previous_headings":"","what":"TBATS model — train_tbats","title":"TBATS model — train_tbats","text":"Train TBATS model (Trigonometric seasonality, Box-Cox transformation,    ARMA errors, Trend Seasonal components).","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_tbats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TBATS model — train_tbats","text":"","code":"train_tbats(.data, specials, periods, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/train_tbats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TBATS model — train_tbats","text":".data Input data tsibble. specials Specials list defined specials_tbats. periods Integer vector. periodicity time series (e.g. periods = c(24, 168) hourly data). ... arguments passed forecast::tbats().","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/train_tbats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TBATS model — train_tbats","text":"object class TBATS.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/tscv_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to extract tscv colors as hex codes. — tscv_cols","title":"Function to extract tscv colors as hex codes. — tscv_cols","text":"Function extract tscv colors hex codes.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/tscv_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to extract tscv colors as hex codes. — tscv_cols","text":"","code":"tscv_cols(...)"},{"path":"https://ahaeusser.github.io/tscv/reference/tscv_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to extract tscv colors as hex codes. — tscv_cols","text":"... Character names tscv_colors.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/tscv_pal.html","id":null,"dir":"Reference","previous_headings":"","what":"Return function to interpolate a tscv color palette. — tscv_pal","title":"Return function to interpolate a tscv color palette. — tscv_pal","text":"Return function interpolate tscv color palette.","code":""},{"path":"https://ahaeusser.github.io/tscv/reference/tscv_pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return function to interpolate a tscv color palette. — tscv_pal","text":"","code":"tscv_pal(palette = \"main\", reverse = FALSE, ...)"},{"path":"https://ahaeusser.github.io/tscv/reference/tscv_pal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return function to interpolate a tscv color palette. — tscv_pal","text":"palette Character value. name palette tscv_palettes. reverse Logical value indicating whether palette reversed. ... Additional arguments pass colorRampPalette()","code":""}]
